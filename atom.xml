<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Orokana Pekoponjin]]></title>
  <link href="http://df1.github.com/atom.xml" rel="self"/>
  <link href="http://df1.github.com/"/>
  <updated>2012-09-30T13:34:37+08:00</updated>
  <id>http://df1.github.com/</id>
  <author>
    <name><![CDATA[df1]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[JS Group Taichung Meetup September 2012]]></title>
    <link href="http://df1.github.com/blog/2012/09/11/js-group-taichung-meetup-september-2012/"/>
    <updated>2012-09-11T14:39:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/09/11/js-group-taichung-meetup-september-2012</id>
    <content type="html"><![CDATA[<p>這次是<a href="http://javascript.tw">JS Group</a>在台中舉辦的第五次聚會。這個聚會除了每隔週在台北之外，通常選在每個月的第一個禮拜六下午會來到台中舉行。今天大家一樣是在老地方的水舞饌三樓，一起吃吃喝喝、coding、聊天。而這次的講者就是主辦的TonyQ大大。</p>

<p>TonyQ本身因為工作的關係，對jQuery等前端技術相當有經驗，所以大多分享還是會以jQuery為主。不過這個活動中大家討論的內容還是可以跳脫jQuery、跳脫library，廣泛地去討論所有JS或前端技術。今日主題就是網站裡很本質的要素：JS表單驗證、彈出式視窗。</p>

<p><img src="http://www.xapps.tw/files/node_image/52/js.png" alt="FB上的盛況XD" /></p>

<!--more-->


<p></p>

<h2>甚麼是表單驗證？</h2>

<p>以registrano報名表單為例：欄位分為必填、非必填。這就是最常見需要驗證的地方。表單驗證需要在兩個地方實作：</p>

<ol>
<li><p>送出前的內容：在前端驗證並提示使用者。</p></li>
<li><p>送出後在伺服器端的資料阻擋：這裡才是最主要的驗證地點，真正的防線。</p></li>
</ol>


<p>但是今天著重在前端表單驗證，目的是友善地導引使用者填好表單。（記得要友善導引喔，不要跳出「哈哈哈你看看你」這種意味不明的提示XD）</p>

<p>一般的表單都會有個<code>&lt;form&gt;</code>元素。我們可以用以下兩種作法來在submit之前做驗證：</p>

<p>把按鈕改成不是<code>action="submit"</code>，而是<code>onclick</code>時另外呼叫函式驗證後再真正去呼叫<code>form.submit()</code>
在submit的event做一些處理，如果失敗就終止submit。</p>

<pre><code>$('#register-form').on('submit', function(){
    var validated = validate();
    if(!validated){
        return false; //在jQuery中return false常常是終止該event
    }
});



function validate(){
    if($.trim($('person_name').val())==''){
        alert('請填寫姓名');
        $('person_name').focus();
        return false;
    }
    return true;
}
</code></pre>

<p>驗證日期格式也有兩招：
1.試著把他轉成Date物件</p>

<pre><code>if(new Date($('#date-field').val()))
</code></pre>

<p>2.用Regular Expression</p>

<pre><code>if(/[0-9]{4}\/[0-9]{1,2}\/[0-9]{1,2}/.test($('#date-field').val()))
</code></pre>

<p>不過大家都知道，表單驗證是很複雜的事，純粹用regular expression是做不到的；
再者，有多少欄位就要寫多少行的if clause，是一件很痛苦的事情。
以下舉了一些現成的表單驗證工具，看別人怎麼簡化這個東西。</p>

<h3><a href="http://jquery.bassistance.de/validate/demo/">jQuery Validation</a>：老字號(2006~2007就出現了)</h3>

<pre><code>&lt;input id="name" type="text" minlength="2" required&gt;
</code></pre>

<p>加上一些custom attribte後，它就會幫你檢查欄位、email驗證、URL驗證、若驗證不通過做highlight。</p>

<p>錯誤訊息的自訂：</p>

<pre><code>$(".selector").validate({
   rules: {
      name: "required",
      email: {
         required: true,
         email: true
      }
   },
   messages: {
      name: "Please specify your name",
      email: {
         required: "We need your email address to contact you",
         email: "Your email address must be in the format of name@domain.com"
      }
   }
});
</code></pre>

<p>看他怎麼驗證email：source code裡面有一個非常經典的驗證email的超級長regular expression：</p>

<pre><code>/^((([a-z]|\d|[!#\$%&amp;'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&amp;'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))$/i
</code></pre>

<p>jQuery Validation整體評價：很陽春、很好用</p>

<h3><a href="https://github.com/posabsolute/jQuery-Validation-Engine">jQuery Validation Engine</a></h3>

<p>簡單用法：</p>

<pre><code>&lt;input value="someone@nowhere.com" class="validate[required,custom[email]]" type="text" name="email" id="email" /&gt;
</code></pre>

<p>現在時代不一樣，他也提供了data-attribute的寫法：</p>

<pre><code>&lt;input type="email" name="email" id="email" data-validation-engine="validate[required,custom[email]]" data-errormessage-value-missing="Email is required!"  data-errormessage-custom-error="Let me give you a hint: someone@nowhere.com"    data-errormessage="This is the fall-back error message."/&gt;
</code></pre>

<h3>最後提供一些User Experience上的小叮嚀：</h3>

<p>錯誤訊息要讓user看得懂。
錯誤要一目瞭然，要避免讓user做try-and-error：改正之後才告訴user下一個錯誤。
驗證在前後端都要完整地去做。
送出之後把整個表單保留下來。
字數限制：字數超過不要阻擋使用者輸入，提示或送出前驗證即可。
最理想的驗證方式：輸入之後馬上告訴使用者對或錯、並提供auto complete。
題外話，如果時常因為辛苦填完表單因為驗證不通過被reset而感到挫折，可以試試這個瀏覽器附加元件：Form recovery (for firefox/chrome)XD</p>

<h3>小結</h3>

<p>常常會有十個以上的方法來解同一個問題。實務上，還是需要看需求及團隊skillset來調整實作方法。另外，表單驗證其實不限於有<code>&lt;form&gt;</code>的形式(如：FB社團加入成員功能，是由一個輸入框+按鈕構成的)</p>

<p>表單設計好書推薦：<a href="http://www.pcstore.com.tw/69book/M07276721.htm">「Web表單設計:點石成金的藝術」</a></p>

<h2>彈出式視窗</h2>

<p>彈出式視窗說穿了就是在有限的畫面內浮出一個區間：其他的不重要啦，讓專業的來！</p>

<ul>
<li><a href="http://leandrovieira.com/projects/jquery/lightbox/">jQuery</a> lightbox：最常見的選擇</li>
<li><a href="http://www.malsup.com/jquery/block/">Block UI</a></li>
<li>jQuery Alert：做簡單的提示或確認視窗</li>
</ul>


<p>這些彈出式視窗的技術原理都是利用很大的overlay遮在body上面，有透明度(<code>opacity:0.6;</code>)，固定位置(<code>position:fixed;</code>)。</p>

<p>但是，popup本身不是在overlay裡面(因為這樣child也會有透明度)；</p>

<p>而是使用很大的<code>z-index</code>讓他浮上來(所以網頁裡面元素的<code>z-index</code>請儘量設在100以內，不然可能會讓mask蓋不住它)。</p>

<p>特例：flash常常蓋不住怎麼辦？</p>

<p>flash屬性的<code>WMode</code>要改成<code>transparent</code>。</p>

<h3><code>window.alert</code>與<code>window.open</code>的迷思</h3>

<p>若使用JS下一般的alert，會讓整個JS會停下來等你。用上述popup及假alert是沒辦法做到這種synced的效果的。</p>

<p><code>window.open</code>會被瀏覽器封鎖彈出視窗，所以儘量不要用。但是如果是伴隨著click event，一般瀏覽器預設不會阻擋。不過還是「能不用就不用」。</p>

<p>如果是開同一個domain的URL，可以藉由指定target name來取得控制。</p>

<pre><code>window.test = window.open('about:blank','test');
</code></pre>

<p><code>window.open</code>時候會回傳一個window物件的reference。有window就會有document，有document就會有body，有body就可以改它裡面的東西。也就是說母視窗可以改子視窗。</p>

<p>反過來，小孩也可以看到父親：<code>window.opener</code>。所以小孩覺得自己被改了很不爽，也可以改他老爸！
(要小心跟<code>window.parent</code>搞混。<code>window.parent</code>拿到的是frame或iframe的parent window。不過這部分規格似乎有變動，連W3C目前都還是用<code>window.open</code>當範例)</p>

<p>還有一個特異功能不太有人知道，看起來很炫但是千萬不要亂用：用<code>window.opener.$</code>去拿它老爸的jQuery來用！如此一來，$的scope是在外面。如果裡面小孩真的要用，需要把小孩自己的<code>document</code>傳進去：</p>

<pre><code>window.opener.$(document).find('body')[0];
</code></pre>

<p>有種情境適合這樣做：發文章的預覽功能</p>

<p>雖然看起來子母視窗可以互通有無是很炫的事情，但是他們記憶體也可以互通有無。</p>

<p>所有的瀏覽器(包含IE6)都可以這樣做，不過policy還是同網域才可以用<code>window.opener</code>。<code>window.opener.$(document).find('body')[0];</code></p>

<p>有種情境適合這樣做：發文章的預覽功能</p>

<p>雖然看起來子母視窗可以互通有無是很炫的事情，但是他們記憶體也可以互通有無。</p>

<p>所有的瀏覽器(包含IE6)都可以這樣做，不過policy還是同網域才可以用<code>window.opener</code>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web Dev Party #5 活動小記]]></title>
    <link href="http://df1.github.com/blog/2012/07/20/web-dev-party-5/"/>
    <updated>2012-07-20T19:40:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/07/20/web-dev-party-5</id>
    <content type="html"><![CDATA[<p><img src="http://i.imgur.com/Cnu9x.jpg" alt="閃光洽 - Rsponsive WAT Design" /></p>

<p><img src="http://i.imgur.com/8QbM1.jpg" alt="保哥 - HTML5 JavaScript APIs" /></p>

<p>今天請假北上參加了年度的<a href="https://service.ithome.com.tw/20120720Java/">Java大拜拜</a>，剛好有機會參加這次在蛙.咖啡 (frog.cofe)舉辦的<a href="http://registrano.com/events/webdev-party-05">Web Dev Party #5</a>！這可是傳說中全台最有梗、一票難求，大大、神人、正妹(!)一次到位的熱鬧技術趴，快來一探究竟吧！</p>

<p>這次的主題是關於現正快速崛起的新的Web標準&#8211; <a href="http://zh.wikipedia.org/wiki/Html5">HTML5</a>的應用，一共有兩個講題：Responsive WAT Design 與 HTML5 JavaScript APIs。還是要先提醒的是，如果您用的是IE且版本是10以前，還是先換個瀏覽器再來玩下面的東西吧<code>&gt;_^</code></p>

<!--more-->


<h2>Responsive WAT Design</h2>

<ul>
<li>講者：<a href="http://about.me/hinablue">閃光洽</a></li>
<li>部落格：<a href="http://blog.hinablue.me">HINA::工程幼稚園</a></li>
<li>噗浪：<a href="http://www.plurk.com/hinablue">Cain Chen</a></li>
</ul>


<p>由<strong>大澤木小鐵</strong>大大簡單的開場後，首先登場的是<strong>閃光洽</strong>大大分享的Responsive WAT Design。
據說這次開場前投影片發生了<em>杯具</em>，於是破天荒的直接開vim當投影片用（驚）！</p>

<p>(雖然沒有正式的投影片，講者還是講了不少<a href="http://rwd.hinablue.me/">疑似之前分享過的投影片(?)</a>←投影片本身也是responsive，可以用手機觸控喔！)</p>

<h3>WAT is Responsive Web Design!?</h3>

<p>Responsive Web Design (RWD) 從字面上看來是指「會依環境而反應的網頁設計」(Web design that responds to the environment)。這個UX議題最近愈來愈廣泛地被討論，其中也包含<a href="https://speakerdeck.com/u/kneath/p/responsive-web-design-from-the-future">許多不同面向</a>，
不過最基本也最常提到的一項，還是要讓網頁在不同螢幕大小、不同裝置類型、橫向或縱向切換時，能有相對應的顯示方式。</p>

<p>要做到這功能，除了自己用<a href="http://www.w3.org/TR/css3-mediaqueries/">CSS3的media query</a>硬刻以外，講者也推薦了一些好用的現成工具，如<a href="http://www.initializr.com/">Initialzr</a>與Twitter的<a href="http://twitter.github.com/bootstrap/">bootstrap</a>等等。另外也秀了一個經典的responsive + fluid範例：<a href="http://goldengridsystem.com/">Golden Grid System</a>，裡面提供以網格為基礎的許多responsive設計細節（看了一下..有點難懂囧）</p>

<h2>HTML5 JavaScript APIs</h2>

<ul>
<li>講者：Will保哥</li>
<li>部落格：<a href="http://blog.miniasp.com/">The Will Will Web</a></li>
<li>FB粉絲團：<a href="http://www.facebook.com/will.fans">Will 保哥的技術交流中心</a></li>
</ul>


<p>中場休息吃吃喝喝閒聊過後，接下來這個主題的範圍就更廣了，保哥即將為我們介紹HTML5所有新標準還有對應的JS寫法！</p>

<p>可惜的是投影片似乎還沒公開，不過<a href="http://www.microsoft.com/taiwan/events/learn/?id=6d9b008a0aa5">保哥在微軟大拜拜的講題</a>中有一些類似的內容！
（<a href="http://content3.catalog.video.msn.com/e2/ds/b29005d2-4459-42d4-9b80-7af66875bf50.mp4">直接下載影片</a>）</p>

<p>以下是我的零星小筆記：</p>

<h3>async</h3>

<p>以前的script tag就可以使用<a href="http://www.w3schools.com/tags/att_script_defer.asp">defer</a>的屬性，讓頁面載入完成之後才執行script tag內的code：</p>

<pre><code>&lt;script src...
&lt;script defer src...
</code></pre>

<p>現在多了新的<a href="http://www.w3schools.com/html5/att_script_async.asp">async</a>屬性。因為預設瀏覽器載入、執行script tag的行為是會block住整個頁面載入的process；
但套用了async之後，script tag載入就會變成非同步，不會阻擋畫面的載入。</p>

<pre><code>&lt;script async...
&lt;script async defer ...
</code></pre>

<p><a href="http://ie.microsoft.com/testdrive/Performance/AsyncScripts/Default.html">async的範例(微軟網站)</a>
在第一個範例中，可以很清楚的看出當欲載入的JS檔過大時使用async屬性的好處。
第二個範例是示範在JS裡面生出來的script tag（範例是動態生成外部script tag來顯示圖片）。在每個script在載入時間不同的情況下，原本JS執行是非同步的特性會造成他呈現的圖片順序無法控制；如果在這時候把async屬性設成false，script才會乖乖的一個接一個載入。</p>

<h3>Sandbox</h3>

<pre><code>&lt;iframe sandbox="allow-forms allow-same-origin" ...
</code></pre>

<p><del>如果你有跟IE簽下契約成為XSS少女</del>&#8230;
阿不是啦，是說例如我們在部落格裡面常常會有許多的iframe（你的初音時鐘還有噗浪徽章啥的），
這些iframe常常成為XSS攻擊的隱患。
如果將iframe設定sandbox沙盒模式屬性，iframe裡面的網頁就會被視為cross-domain且無法執行script、plugin、form等等行為。當然如果要允許其中某些行為也是都可以設定的，如上面範例就可以允許iframe裡的form submit且不會強制當常cross-domain。</p>

<p><a href="http://ie.microsoft.com/testdrive/HTML5/sandbox/Default.html">sandbox範例(微軟網站)</a></p>

<h3>離線WebApp: Application Cache</h3>

<pre><code>&lt;html manifest="clock.appcache"

mime: text-cache-manifest
</code></pre>

<p>這部分講者分享了許多他自己使用這個離線快取實作的經驗，還有許多的悲劇跟實務上的大陷阱。
不過我&#8230;我&#8230;那時候聽得太入神忘了做筆記了囧，等有研究到這塊應該會想起來，到時候再補上吧！（喂喂喂來人阿把他帶走）</p>

<h3>Web Storage: local storage + session storage</h3>

<p>當我們要在用戶端存資料時，通常會想到使用cookie。
但它有些限制：每個domain最多300個、最大4K、效能不彰、無法在client區分不同視窗等等。
Web storage克服了以上的cookie做不到的事；
另外在安全性上，web storage的內容server side是抓不到的。
API中提供以下兩種類型的web storage：
*   sessionStorage：同域名下、在同一視窗存取資料
*   localStorage：跨視窗存取資料</p>

<p>不過Web Storage還是有一些限制如：W3C建議不超過5MB、只能存字串等等。</p>

<h3>Web DB</h3>

<p>W3C放棄了SQLite規格，之後會改往IndexedDB發展。
Indexed DB：key是字串，value可以是object
<a href="http://www.html5rocks.com/en/tutorials/indexeddb/todo/">使用Web DB實作的TODO List範例</a></p>

<h3>Geolocation</h3>

<p>地理位置的API不是在window下，而是在navigator下。有兩個主要功能：<br/>
1.  取得當前座標資訊<br/>
2.  持續追蹤座標資訊</p>

<p><a href="http://html5demos.com/geo/">DEMO</a></p>

<h3>Web Audio</h3>

<p><img src="http://www.html5audio.org/item_images/plucked-de.png" alt="HTML5 Audio Editor" />
講者示範了一個令人大為驚豔的作品：<a href="http://plucked.de">html5 audio editor</a>。
這個web app竟然在網頁上實現了一個混音軟體，而且還是學生的作品！
（<a href="http://plucked.de">網址</a>、<a href="https://github.com/plucked/html5-audio-editor">Github上的原始碼</a>）</p>

<h2>Ending</h2>

<p>快樂的時光總是特別快，因為場地時間限制的關係，趴踢還是得散場Q_Q。
但講了那麼多，實際上還講不到一半的投影片內容（驚）！
話說以現在Web的天下大勢可說是瞬息萬變，即使是大神如估狗、巨人如M$，也是都看不準的。
若之後有機會聽到完整版，想必又會有許許多多不同的梗、不同的感受吧！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Node.JS Hsinchu Party 2012/06/30]]></title>
    <link href="http://df1.github.com/blog/2012/07/01/node-js-hsinchu-group-meetup-2012-06-30/"/>
    <updated>2012-07-01T20:50:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/07/01/node-js-hsinchu-group-meetup-2012-06-30</id>
    <content type="html"><![CDATA[<p><img src="http://i.imgur.com/zFjtc.png" alt="" /></p>

<p>這次Node.JS Hsinchu Party，除了有<a href="http://blog.jackbean.tw">JackBean</a>提供的免費場地、Nausca大大熱情贊助的飲料外，
還有大家期待已久的、一樣是由<a href="http://storiii.com/">storiii</a>的Yusen大大來分享的兩個主題：<a href="https://github.com/visionmedia/ejs#readme">EJS</a>與<a href="http://en.wikipedia.org/wiki/Y_Combinator#Y_combinator">Y-combinator</a>。</p>

<!--more-->


<h2><a href="https://github.com/visionmedia/ejs#readme">EJS</a></h2>

<p><a href="https://github.com/visionmedia/ejs#readme">EJS</a>是一個以JavaScript實作的Template Engine，基本用法跟ASP、JSP的tag library很類似：</p>

<pre><code>&lt;% if(user.name) {%&gt;
    &lt;h2&gt;&lt;%= user.name %&gt;&lt;/h2&gt;
&lt;% } %&gt;
</code></pre>

<p>它可以直接在NODE以<a href="http://npmjs.org/">NPM</a>安裝使用（可以完美配合<a href="http://expressjs.com/">express.js</a>），也可以在broswer端呼叫使用。
基本的介紹其實到這邊就講完了（咦!?）</p>

<h3>Use case</h3>

<p>EJS看似一個簡單的工具，要如何把它用到出神入化的境界呢？
講者舉了像iPad上flipboard上可依內容做出的動態排版為例，
提到了「設計師心目中的排版」與「工程師心目中的排版」觀念上的落差。</p>

<p>若只討論單純的切割畫面，可以是一種程式先決的過程；
而設計先決，是請設計師先決定怎樣叫好看的方塊：例如設計出大塊/中塊/小塊三種不同的方塊外觀，
對應到重要性或關聯性為高、中、低的文章，
然後再設計填充畫面的演算法。在範例中，講者將整個畫面切成grid，
對應到程式上的二維陣列，再請設計師用小格子去排，
把排版問題轉換成排積木問題：laout problem -> packing problem。
最後，計算造成多少破洞，找出第一個符合標準的排版組合，進行layout。</p>

<!--
慧眼挑金eat people
cinder: C++做到JS的感覺
-->


<h2>Y Combinator</h2>

<p>第二個主題是大家耳熟能詳的Y-combinator。
但要講的不是那間國外有名的創投，而是那個傳說中的functional programming技巧！
（現場三個人裡面也是有兩個以為是要講創投，不過謎底揭曉後，大家興致更高昂了XD）</p>

<p>YuSen大大用最經典的費伯納西遞迴函式開始進行推導，經過curry等技巧的一番最佳化之後，
最後生成的是一個讓人看不懂的Y函式，還有分離出來費氏數列邏輯的函式。</p>

<h3><a href="http://storiii.com/player.html">詳細推導過程請見YuSen大大的網站投影片</a></h3>

<p>雖然Y combinator本身是經過層層推導出的結果，無法讓人一眼看懂，
不過可以將它理解成「遞迴引擎」。只要將邏輯傳進去，就可以利用它生成一個單一參數的遞迴函式。
這樣做的優點是可以減少撰寫遞迴函式犯錯的機會；另外更實用的，
我們可以透過改善Y遞迴函式引擎，讓所有使用它的函式得到加速的效果。</p>

<p>在投影片中Memorized Y的範例，藉由將Y導入快取機制來避開重複運算，達到神級的效能增益：
加速前<code>fib(50)</code>要耗時520秒；使用加速後的<code>fibM()</code>後，執行速度快到無法以毫秒單位估計，
直到‵fibM(1000)`才終於花了1毫秒，但是此時計算出的數值已經大到超越JS提供的精準度了！</p>

<!--
functor
functional composition?
-->

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2012 Event Log]]></title>
    <link href="http://df1.github.com/blog/2012/06/21/2012-event-log/"/>
    <updated>2012-06-21T20:50:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/06/21/2012-event-log</id>
    <content type="html"><![CDATA[<p><img src="http://i.imgur.com/Gq3Gp.png"></p>

<p>This post is an information/note aggregation from all the events that I have joined in 2012.</p>

<!--more-->


<h1>April 2012</h1>

<h2><a href="http://osdc.tw">OSDC.TW 2012</a></h2>

<ul>
<li>Date: 2012/04/14~2012/04/15</li>
<li>Location: 中研院人社館</li>
<li><a href="http://df1.github.com/blog/2012/04/17/osdc-2012-impressions/">My blog post</a></li>
</ul>


<iframe class="imgur-album" width="100%" height="550" frameborder="0" src="http://imgur.com/a/vuaRA/embed"></iframe>


<h2>JavaScript.tw <a href="http://registrano.com/events/jstw-tc-20120428">JS Group 台中場</a></h2>

<ul>
<li>Date: 2012/04/28</li>
<li>Location: 永慶房屋會議室</li>
</ul>


<h1>May 2012</h1>

<h2><a href="http://jsdc.tw/2012/">JSDC.TW 2012</a></h2>

<ul>
<li>志工 - 紀錄組 (會前會2012/05/06、2012/05/18)</li>
<li>Date: 2012/05/19 (Sat)</li>
<li>Location: 中研院人社館</li>
<li><a href="http://df1.github.com/blog/2012/05/29/jsdc-gaia-keynote-transcript/">My blog post</a></li>
</ul>


<h2>Mozilla Taiwan <a href="http://registrano.com/events/mozilla-addon-workshop">Firefox Add-on 附加元件入門班</a></h2>

<ul>
<li>Date: 2012/05/20 10:00 ~ 05/20 13:00</li>
<li><a href="http://littleb.tc/slides/2012/mozilla-tw/addon-sdk.html">Slide</a></li>
<li><a href="http://blog.mozilla.com.tw/posts/528/firefox-%E9%99%84%E5%8A%A0%E5%85%83%E4%BB%B6%E9%96%8B%E7%99%BC%E5%A4%A7%E8%BB%8D%EF%BC%8C%E5%8F%88%E5%A2%9E%E6%96%B0%E8%A1%80%EF%BC%81">Firefox附加元件開發大軍，又增新血</a></li>
</ul>


<h2>NodeJS Taiwan <a href="http://registrano.com/events/a490b5">Node.js Taiwan Party 新竹場</a></h2>

<ul>
<li>Date: 2012/05/26</li>
<li>Location: Jack Bean 傑克豆豆</li>
</ul>


<h2>MozTW x Ubuntu-TW <a href="http://registrano.com/events/fxu12rp">Firefox x Ubuntu 12(.04) Release Party</a></h2>

<ul>
<li>Date: 2012/05/27</li>
<li>My plurk <a href="http://www.plurk.com/p/ghi116">1</a> <a href="http://www.plurk.com/p/ghsykd">2</a><br/>
<img src="http://cdn.registrano.com/upload_images/8452/Ubuntu_x_Firefox_12_.04__Release_Party_-_Landscape_520.png" width="200"></li>
<li><a href="https://etherpad.mozilla.org/furp-slide">Etherpad Note</a></li>
</ul>


<h1>June 2012</h1>

<h2>JavaScript.tw <a href="http://registrano.com/events/jstw-tc-20120428">JS Group 台中場</a></h2>

<ul>
<li>Date: 2012/06/02</li>
<li>Location: 永慶房屋會議室</li>
</ul>


<h2><a href="http://registrano.com/events/8c4b43">Fedora 17 發行派對 @ 台中</a></h2>

<ul>
<li>Date: 2012/06/03</li>
<li>Location: 黑貓月亮咖啡館</li>
<li><a href="https://docs.google.com/open?id=0B2o5fiqQwyn-Zjh4bkh2UU5aR0E">Fedora 17 Release Party Slide</a> <a href="http://www.slideshare.net/Chengchiatseng/fedora-17-release-party">slideshare</a>- 真正加</li>
<li><a href="http://fedora.linux.org.tw/systemd/template.html">Systemd - Boot Faster</a> - WM</li>
<li><a href="http://www.dedoimedo.com/computers/systemd-blame.html">Slow boot? Blame systemd!</a></li>
</ul>


<h2>PyHUG <a href="http://www.meetup.com/pythonhug/events/61065022/">June Meeting</a></h2>

<ul>
<li>Date: 2012/06/20</li>
<li>Location: 清大創新育成中心115<br/>
<img src="http://photos1.meetupstatic.com/photos/event/5/8/0/e/global_76882542.jpeg"></li>
</ul>


<h2>新竹碼農聚會<a href="http://registrano.com/events/c1c1cb">(Hsinchu Coding Serfs Meeting)</a></h2>

<ul>
<li>Date: 2012/06/21</li>
<li>Location: Book11</li>
<li><a href="http://expressjs.com/guide.html">Express</a></li>
<li><a href="http://socket.io/">socket.io</a></li>
<li><a href="http://www.mongoose.com/">mongoose</a></li>
<li><a href="http://book.nodejs.tw/">Node.js 台灣社群協作電子書</a></li>
<li><a href="http://nodejs.tw/post/24896137291/build-a-todo-list-using-express-node-js-taiwan-party">BUILD A TODO LIST USING EXPRESS</a></li>
<li><a href="https://github.com/kanaka/websockify">websockify</a></li>
<li><a href="http://derbyjs.com/">Derby</a></li>
<li><a href="http://docs.meteor.com/#quickstart">Meteor</a></li>
<li><a href="http://www.xapps.tw">APPS跨界交流協會</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[JSDC.TW Transcript: Building Mobile Devices with the Open Web ]]></title>
    <link href="http://df1.github.com/blog/2012/05/29/jsdc-gaia-keynote-transcript/"/>
    <updated>2012-05-29T22:33:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/05/29/jsdc-gaia-keynote-transcript</id>
    <content type="html"><![CDATA[<p><img src="http://jsdc.tw/2012/img/logo.png"></p>

<p>Last week I worked at JSDC.TW 2012 as a volunteer. I was extremely exited about this since it was the first JavaScript conference in Taiwan! <a href="http://www.plurk.com/p/gflmfl">Here</a> is my brief summary during the entire conference, and also the preparation on the day before the conference.</p>

<h3><a href="http://jsdc.tw/2012/Sessions">Full agenda with slides and videos</a></h3>

<p>And here I&#8217;m gonna add caption for one of these video, which might be the hardest one to deal with. It&#8217;s still in progress, and <strong>needs your help!</strong></p>

<p>My current progress is right below, with most of them already synced into YouTube. If you can help me out, please contact me directly with DISQUS comment! Either transcripting, proofreading, or syncing are all appreciated! Thanks!</p>

<h2>The Video</h2>

<iframe width="560" height="315" src="http://www.youtube.com/embed/9_uTJ2iTovg?rel=0" frameborder="0" allowfullscreen></iframe>


<ul>
<li>Speaker: Andreas Gal (R&amp;D Director of Mozilla)</li>
<li>Session Topic: Building Mobile Devices with the Open Web</li>
<li>Original Topic: Gaia: A modern smartphone user interface in HTML5 and JavaScript</li>
</ul>


<!--more-->


<h2>Transcript (Done, need proofreading)</h2>

<script src="https://gist.github.com/2836502.js?file=transcript.txt"></script>


<h2>Synced Caption</h2>

<script src="https://gist.github.com/2787823.js?file=captions_zh-TW.srt"></script>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[無聊分享：PTT有人在送吉他時候跟我說一聲]]></title>
    <link href="http://df1.github.com/blog/2012/05/07/notify-me-when-theres-guitar-giveaway-in-ptt/"/>
    <updated>2012-05-07T22:24:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/05/07/notify-me-when-theres-guitar-giveaway-in-ptt</id>
    <content type="html"><![CDATA[<p>又來做無聊分享了！話說PTT的give（贈送板）真的是個好地方，幾乎是什麼都送，什麼都不奇怪，連吉他、電吉他都有很多佛心來的版友大方割愛。不過對於工作忙碌、在公司又不能上PTT的的宅宅工程師而言，絕對是搶不贏那些全職鄉民的orz</p>

<p>這時候若是有個機器人可以隨時幫我爬文通知該有多好！不過機器人其實不用自己寫，有個N年前發表之後一直維持冷門狀態的服務&#8211;<a href="http://pipes.yahoo.com">Yahoo Pipes</a>可以派上用場！</p>

<h2>製作Pipe</h2>

<p>其實Pipes功能相當多，但其最終的目的就是幫我們從許多資料來源中擷取出我們自己想要的內容。這裡我就不對詳細使用方法多作介紹，若有興趣網路上有許多相關資料。</p>

<p>Pipes的一大特點就是他的視覺化畫布，讓你對資料的『管路』一目瞭然。看圖就可以知道我在做啥：</p>

<!--more-->


<p><img src="http://df1.github.com/attachments/2012-05-07-notify-me-when-theres-guitar-giveaway-in-ptt/pipes.png" title="&#34;專門PTT送吉他的Pipe&#34;" alt="&#34;專門PTT送吉他的Pipe&#34;"></p>

<h3>小解說</h3>

<ol>
<li>資料來源有兩個：give板與guitar板。</li>
<li>give板過濾標題關鍵字有『吉他』的；guitar板過濾有『送』的</li>
<li>取聯集</li>
<li>一一去撈對應的PTT Web板頁面內容，把它塞進<code>item.description</code>中方便即時觀看（沒辦法，公司不能上orz）</li>
</ol>


<p>做完之後，在頁面上有一堆格式的輸出可以隨便拿，例如可以拿RSS再加上自己chrome的RSS通知外掛，若有新資料就自動彈出小視窗；或是直接點<code>Results by Email or Phone</code>讓Yahoo Alert傳email或簡訊通知。
欸，至於收到通知後若是在上班怎辦？當然是直接call萬能的老弟叫他幫忙丟水球回站內信囉XD</p>

<p><img src="http://df1.github.com/attachments/2012-05-07-notify-me-when-theres-guitar-giveaway-in-ptt/reader.png" title="&#34;將RSS餵給Google Reader&#34;" alt="&#34;將RSS餵給Google Reader&#34;"></p>

<h3>Pipe連結：<a href="http://pipes.yahoo.com/s911131/pttguitar">PTT送吉他</a>，歡迎fork！</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[自製波笛跑步機]]></title>
    <link href="http://df1.github.com/blog/2012/05/01/cat-wheel-diy/"/>
    <updated>2012-05-01T23:17:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/05/01/cat-wheel-diy</id>
    <content type="html"><![CDATA[<p>之前在別人的網誌看到<a href="http://sepudesign.pixnet.net/blog/post/26003728-%E8%B2%93%E5%92%AA%E9%A3%9B%E8%BC%AA">這篇文</a></p>

<p><img src="http://df1.github.com/attachments/2012-05-01-cat-wheel-diy/pixnet.gif" title="&#34;貓咪飛輪&#34;" alt="&#34;貓咪飛輪&#34;"></p>

<p>他們是專業的木工，專門幫人訂做貓牆之類的貓奴家具。因為那整組訂做要價約一萬台票，當下心裡就出現了一個絕妙的替代方案，馬上決定要自己做一個XD</p>

<p>廢話不多說，看圖吧XD</p>

<!--more-->


<p><img src="http://df1.github.com/attachments/2012-05-01-cat-wheel-diy/CIMG2394.JPG" title="&#34;材料之一：超大塑膠瓦楞板&#34;" alt="&#34;材料之一：超大塑膠瓦楞板&#34;">
<img src="http://df1.github.com/attachments/2012-05-01-cat-wheel-diy/CIMG2395.JPG" title="&#34;看這張圖就知道我要做啥了XD 使用大呼拉圈當框架&#34;" alt="&#34;看這張圖就知道我要做啥了XD 使用大呼拉圈當框架&#34;">
<img src="http://df1.github.com/attachments/2012-05-01-cat-wheel-diy/CIMG2397.JPG" title="&#34;接縫處要做一些處理，才不會變成永澤的形狀（？）&#34;" alt="&#34;接縫處要做一些處理，才不會變成永澤的形狀（？）&#34;">
<img src="http://df1.github.com/attachments/2012-05-01-cat-wheel-diy/CIMG2398.JPG" title="&#34;合體！其實原本想要買的是有凹槽的大滑輪，直接跟呼拉圈嵌合；可惜找不到那麼大的，只好改成上圖這種形式&#34;" alt="&#34;合體！其實原本想要買的是有凹槽的大滑輪，直接跟呼拉圈嵌合；可惜找不到那麼大的，只好改成上圖這種形式&#34;">
<img src="http://df1.github.com/attachments/2012-05-01-cat-wheel-diy/CIMG2399.JPG" title="&#34;內層鋪上壁紙，增加摩擦力&#34;" alt="&#34;內層鋪上壁紙，增加摩擦力&#34;"></p>

<p>但是很遺憾的，因為忘了帶雷射筆回家，所以目前的窘境是完全沒辦法讓波笛自然而然地走上去那個龐然大物裡面，他完全不知道那個是幹嘛用的XDD
只好等之後運回新竹再慢慢引導他，不然就要上拍賣了XDDD</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用Sencha Architect 2快速上手Ext JS 4.1]]></title>
    <link href="http://df1.github.com/blog/2012/04/23/get-started-with-ext-js-4-1-using-sencha-architect-2/"/>
    <updated>2012-04-23T23:17:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/04/23/get-started-with-ext-js-4-1-using-sencha-architect-2</id>
    <content type="html"><![CDATA[<p><img src="http://df1.github.com/attachments/2012-04-23-get-started-with-ext-js-4-1-using-sencha-architect-2/architect.png"></p>

<p><del>號外！所有美工（Designer）可以就地升級為架構師（Architect）！</del>（梗等下講）
Sencha在今天釋出了Ext JS 4.1版本。這篇文章將以新手的角度，加上最新工具的輔助，讓你立刻懂得如何踏上Ext JS學習之路，並快速開發一個Web Application的前端介面。（此文章也有PO在ITHome）</p>

<!--more-->


<h2>Ext JS是啥</h2>

<p>首先簡單介紹一下Ext JS好了。不知道大家有沒有用過<a href="http://miroko.tw">miroko</a>？他是N年前我<del>跟水利系室友</del>非常愛用的免費服務，可以幫你掛BT並存到他所提供的網路硬碟空間內，對學術網路頻寬超級大，一秒可以衝到5~10Mb。（但是自從開始收費就跟它再會了） 它那種淡藍色UI，就是使用當時剛推出的Ext JS 1.0刻的。還是沒啥畫面嗎？<a href="http://www.freegroup.org/2009/06/free-online-storage-miroko/">這裡有真相</a>。</p>

<h3>進入正題前，<a href="http://dev.sencha.com/deploy/ext-4.1.0-gpl/examples/">先看看官方提供的範例長怎樣吧！</a></h3>

<p><img src="http://df1.github.com/attachments/2012-04-23-get-started-with-ext-js-4-1-using-sencha-architect-2/feed.png" title="&#34;官方的範例之一：Feed Viewer，阿就藍藍的，非常的『2007』&#34;" alt="&#34;官方的範例之一：Feed Viewer，阿就藍藍的，非常的『2007』&#34;"></p>

<p>簡而言之，Ext JS是<a href="http://www.sencha.com">Sencha</a>公司推出的一個純JS的Web前端框架，提供一般Web App會用到的UI元件（按鈕、表格、Tab…）讓你實作出想要的user flow；且便於繼承擴充，定義出自己客製的元件；另外也提供許多好用的JS utility及Ajax Data Source支援，跟後端CRUD做完美的配合。在外觀上，預設主題是簡單但有點過時的淡藍色，不過他的主題是以SASS/Compass實作，因此只要找對美工（<del>還看別人！？就是你！</del>），也是可以盡情揮灑的。目前它大多應用於企業端的內部Web Application based的資訊系統（至少敝公司將它視為UI標準之一orz，另外不知道為啥，在大陸跟日本的開發者社群似乎都相當發達）。我個人認為它的優點在於良好的繼承架構、便於快速開發及擴充，還有完整豐富的社群、官方支援及API（用商業化套件的好處就在於任何奇怪、無恥的問題只要PO個版就有解，瀏覽器相容等問題都不用自己去搞，也不會叫你RTFM）；但是相對的，跟jQuery+jQuery UI的方便性比起來，它的缺點是架構較為固定，很難去把它的架構翻掉自己重新設計；另外最重要的，它在某些情況可能<strong>要錢</strong>。</p>

<p><img src="http://df1.github.com/attachments/2012-04-23-get-started-with-ext-js-4-1-using-sencha-architect-2/kitchensink.png" title="&#34;Ext JS 4.1 提供的Nepune主題&#34;" alt="&#34;Ext JS 4.1 提供的Nepune主題&#34;"></p>

<h3>授權</h3>

<p>其實寫這篇文章真的有點掙扎，因為真的像是業配文orz。還是先來講講<a href="http://www.sencha.com/products/extjs/license/">授權</a>的部分：<a href="http://www.sencha.com/products/extcore">Ext Core</a>是Ext JS的核心，提供類似於jQuery的DOM操作等功能，是免費的且使用<a href="http://www.opensource.org/licenses/mit-license.php">MIT License</a>；打個比方：Ext Core之於Ext JS，就如同jQuery之於jQuery UI。雖然Ext JS也算是開源的，但它的授權就比較複雜。如果也是用於open source開發，則適用<a href="http://www.gnu.org/copyleft/gpl.html">GPLv3</a>；如果是商業用途且將原始碼視為公司proprietary，則適用<a href="http://www.sencha.com/legal/sencha-commercial-software-license-agreement/">Sencha Commercial License</a>；如果是要把它做成另外的商業化SDK（如<a href="http://www.ext.net/">Ext.NET</a>），Sencha也提供OEM License。而今天要講的Sencha Architect，則是Sencha推出的架構設計工具，<a href="http://www.sencha.com/products/architect/license/">一套要價$399鎂</a>，但提供免費試用。</p>

<h2>開始使用Sencha Architect做第一個Ext JS的UI</h2>

<p>進入正題，前幾天Sencha發表了最新的Sencha Architect 2 （梗在這，因為它以前叫Ext Designer，現在升級變Architect XD）。它是一個強大的東西，只要拉一拉、摳一摳，十分鐘就可以把UI刻好了。除了拉UI之外，它之所以會改名為Architect，是因為它可以直接在裡面寫code、做event handling、甚至定義MVC架構。（另外一大賣點是可以開發Sencha Touch當成手機App，但是本周主題是Web App，所以就不提這段XD）這篇文也不會涉獵到太深的架構部分，目標先設定在快速上手並做出一個會動的Web UI。話不多說，讓我們開始吧（羞）</p>

<p><strong>PS. 按圖片都可以放大</strong></p>

<h3>下載並安裝</h3>

<p><a href="http://www.sencha.com/products/architect/">載點在此</a>，試用前須註冊<a href="http://www.sencha.com/forum/">Sencha Forum</a>的帳號。它本身是以QT及其內建Webkit寫成的跨平台程式，可以在Windows/MacOS/Linux上執行。將程式打開之後，可以看到一個很熟悉的WYSIWYG所見及所得編輯器：左邊是工具箱、中間是畫布、右上是階層圖、右下是一欄欄的屬性。</p>

<p><img src="http://df1.github.com/attachments/2012-04-23-get-started-with-ext-js-4-1-using-sencha-architect-2/wysiwyg.png" title="&#34;Sencha Architect跑起來的樣子&#34;" alt="&#34;Sencha Architect跑起來的樣子&#34;"></p>

<h3>開始拉UI</h3>

<p>迫不及待要從左邊拉東西進來了吧？首先，身為一個web app，會需要的是一個<code>viewport</code>。它可以把整個網頁的畫面撐開，讓我們在裡面做layout。
<img src="http://df1.github.com/attachments/2012-04-23-get-started-with-ext-js-4-1-using-sencha-architect-2/viewport.png" title="&#34;把整個Web App畫面撐開的東西是Viewport&#34;" alt="&#34;把整個Web App畫面撐開的東西是Viewport&#34;"></p>

<p>繼續瘋狂拉東西進來之前，還是要先對Ext JS所提供的各種layout有基本的認識。這個<a href="http://dev.sencha.com/deploy/ext-4.1.0-gpl/examples/layout-browser/layout-browser.html">Ext Layout Browser</a>裡面有各種layout的DEMO及基本介紹。一般來說，我們常常在web app的最外面使用Border Layout，將畫面分成東南西北中<del>發板</del>幾塊（region）。</p>

<p>要設定這個viewport的layout類型，可以在右邊屬性中找到layout下拉選取，或是在畫布上的藍色齒輪跳出的快速設定popup中選取。接下來真的就可以從左邊亂拉元件了。要注意的是，若是在一個border layout的container裡面，它需要有一個<code>region: 'center'</code>   （中央）的子元件；其他東西南北則不一定要有。<a href="http://dev.sencha.com/deploy/ext-4.1.0-gpl/examples/layout/complex.html">拉完之後可能長這樣</a>。</p>

<p><img src="http://df1.github.com/attachments/2012-04-23-get-started-with-ext-js-4-1-using-sencha-architect-2/region.png" title="&#34;Border Layout的示意圖，紅色框起來的地方套用了border layout&#34;" alt="&#34;Border Layout的示意圖，紅色框起來的地方套用了border layout&#34;"></p>

<p>以下面的圖為例，我西邊放了一個<code>Tree Panel</code>，將它的<code>collapsible</code>（可收合）及<code>split</code>（邊緣分割線）屬性設為<code>true</code>；中間則放了一個包含三個tab的<code>Tab Panel</code>。在第一個Tab，我將它的layout設為absolute，這時候畫面上會出現格線方便我們直接拖拉調整子元件的位置。若要將表單欄位貼到最右邊，可以將<code>anchor</code>屬性設為100%。</p>

<p>在我們拉表單的時候，可以在畫布上的元件按右鍵使用duplicate功能快速複製；複製後可用transform將其轉為其他類別的元件（如：將combo box下拉選單欄位轉為date field日期欄位。它們都是繼承<code>Ext.form.field.Base</code>）。</p>

<h3>看看內建的API文件</h3>

<p>Sencha Architect的一大優點就是它本身整合了Ext的documentation，大幅減少了設計時翻文件的痛苦。如下圖，在左邊的工具箱中點每個元件後，下方都會出現簡單說明；另外，在屬性視窗中的每個屬性旁都有一個問號，滑鼠移上去也會秀出簡單說明。若是想看完整的document，也可以點連結直接跳到線上API去看。
<img src="http://df1.github.com/attachments/2012-04-23-get-started-with-ext-js-4-1-using-sencha-architect-2/api.png" title="&#34;Sencha Architect中內建的documentation功能&#34;" alt="&#34;Sencha Architect中內建的documentation功能&#34;"></p>

<h3><a href="http://docs.sencha.com/ext-js/4-1/">看看很好很強大的線上API文件吧！</a></h3>

<p>Ext的原始碼本身是以JS Doc形式做self-documentation的。Sencha也開發了一個工具叫JS Duck將原始碼直接變成像這樣的API網站。裡面可以看到它提供所有的功能，元件Class的繼承hierarchy，還有範例以及別人的評論。這裡面真的很值得探索！</p>

<h3>事件處理</h3>

<p>若是我想讓user按按鈕之後，將左邊的tree收起來，該怎麼做？（例子很爛請包涵XD）
首先我們先將左邊的tree panel取一個ID叫<code>myTreePanel</code>。有了ID之後，在任何地方都可以使用<code>Ext.getCmp('元件ID')</code>來取得該元件，並進行操作。（題外話，當然這不是唯一方法。若是熟悉CSS selector，也可以用類似jQuery的方法來取得元件，如<code>query</code>、<code>up</code>、<code>down</code>等等。這種寫法相當適合controller使用。）</p>

<p><img src="http://df1.github.com/attachments/2012-04-23-get-started-with-ext-js-4-1-using-sencha-architect-2/id.png" title="&#34;給咱們Tree panel一個ID&#34;" alt="&#34;給咱們Tree panel一個ID&#34;"></p>

<p>接下來，在button的屬性視窗中加入一個event handler如下圖。一個按鈕所有可能觸發的event全部在下拉選單列給我們看了！很直覺地，click應該就是我們要的（通常試試看就知道是不是我們要的了）。
<img src="http://df1.github.com/attachments/2012-04-23-get-started-with-ext-js-4-1-using-sencha-architect-2/event.png" title="&#34;給button加一個click的event&#34;" alt="&#34;給button加一個click的event&#34;"></p>

<p>然後就可以開始寫code了！這一行是利用剛剛設定的ID來拿到左邊的tree，並將它收合。
<img src="http://df1.github.com/attachments/2012-04-23-get-started-with-ext-js-4-1-using-sencha-architect-2/code.png" title="&#34;將左邊的tree收合&#34;" alt="&#34;將左邊的tree收合&#34;">
簡單吧！到這邊已經可以lay出複雜且會動的UI了！</p>

<h3>Data Model與Store</h3>

<p>在企業的web application中，前端需要的資料大多從後端DB過來。只要是有『吃資料』的元件，都需指定一個store給它，裡面存有前端畫面需要的所有資料。在store裡面需定義該store所需要存取的欄位（可以直接在store的fields屬性中定義欄位，也可以指定一個定義好的Data Model給它。）。以combo box（下拉選單）為例，它通常需要兩個欄位：顯示文字與實際值。</p>

<p>依照與後端溝通的方式，Ext提供了各種不同的proxy供store使用。另外根據回傳的資料形式不同，也提供了不同的reader供proxy使用。像我最常用的應該是Ajax Proxy搭配Json Reader。舉例來說，若是我們要做一個性別的選單，而資料由後端某個URL傳回來的Json格式如下：</p>

<pre><code>{
    "total": 2,
    "data": [
        {"gender": "M", "genderText": "男性"},
        {"gender": "F", "genderText": "女性"}
    ]
}
</code></pre>

<p>則需在store新增兩個field：<code>gender</code>和<code>genderText</code>；在proxy的<code>url</code>打上該URL；在reader的<code>root</code>屬性設成<code>"data"</code>（請看上面的json，我們要的資料是在data裡面）。</p>

<p>我知道這又是個爛例子，因為性別其實hard-code就好了XD。下圖是hard-code的combo box store作法：
建立一個Json Store，在field內加兩個欄位；在data裡面hard-code我們的資料；將proxy砍掉。</p>

<p><img src="http://df1.github.com/attachments/2012-04-23-get-started-with-ext-js-4-1-using-sencha-architect-2/store.jpg" title="&#34;Store裡的設定&#34;" alt="&#34;Store裡的設定&#34;"></p>

<p>Combo box部分，將store指向上面定義的MyJsonStore；將<code>displayField</code>跟<code>valueField</code>分別設成我們的顯示文字與實際值欄位名；將<code>queryMode</code>設成<code>"local"</code>（若設成remote，當user在combo box敲字篩選時，會在url後面加上?query=xxx然後去問後端，方便後端做篩選處理）。</p>

<p><img src="http://df1.github.com/attachments/2012-04-23-get-started-with-ext-js-4-1-using-sencha-architect-2/combo.jpg" title="&#34;Combo box裡的設定&#34;" alt="&#34;Combo box裡的設定&#34;"></p>

<h3>佈署到local並預覽</h3>

<p>剛看到Sencha Architect畫面時，一定會想試試看preview跟deploy按鈕到底是在做啥。其實也沒啥，就是幫我們deploy到web server再開啟瀏覽器預覽。須先在settings設定路徑如下圖。另外建議將Ext JS Path改成4.1的<code>http://extjs.cachefly.net/ext-4.1.0-gpl/</code>。
<img src="http://df1.github.com/attachments/2012-04-23-get-started-with-ext-js-4-1-using-sencha-architect-2/settings.png" title="&#34;專案設定畫面&#34;" alt="&#34;專案設定畫面&#34;"></p>

<h2>Application及MVC架構</h2>

<p>雖然這超出本文涵蓋的主題，但還是稍微談一下好了。當Web App規模大到一定程度時，想必會開始思考如何組織程式碼，讓它可讀性變高，還有方便maintain、動態載入及效能等等架構面的問題。若是有看過backbone.js、require.js、knockout.js等工具的介紹文，應該會對現在流行的架構概念有所認識。其實Ext JS也有它自己類似AMD的機制；如果要做類似backbone的hash routing，也可以透過<code>Ext.history</code>（但它還是用hidden iframe囧 要支援舊瀏覽器沒辦法）；最重要的，它的MVC架構設計也是相當優秀，值得另開專文深入討論之。若想瞭解，可以參考<a href="http://docs.sencha.com/ext-js/4-1/#!/guide/application_architecture">這篇官方介紹</a>。看完之後，相信會迫不及待地從左邊工具箱拖出controller來玩玩看吧！</p>

<h3>好文分享</h3>

<ul>
<li><a href="http://docs.sencha.com/ext-js/4-1/#!/guide/application_architecture">Ext JS 4的Application/MVC架構概觀</a></li>
<li><a href="http://www.sencha.com/blog/deftjs-loosely-coupled-mvc-through-dependency-injection">Deft JS: Loosely Coupled MVC through Dependency Injection</a> &#8211; John Yanarella
下面這幾個archticture tool相關文章也非常值得看看，但跟Ext沒關係</li>
<li><a href="http://speakerdeck.com/u/jaceju/p/backbonejs-x-requirejs-quick-guide">Backbone.js X RequireJS Quick Guide</a> &#8211; 大澤木小鐵</li>
<li>介紹Knockout.js的MVVM：<a href="http://addyosmani.com/blog/understanding-mvvm-a-guide-for-javascript-developers/">Understanding MVVM – A Guide For JavaScript Developers</a> &#8211; Addy Osmani</li>
</ul>


<h2>整合後端開發</h2>

<p>在瞭解他匯出的行為之後，就會發現其實很容易跟後端開發的專案進行整合。其中會遇到的一個問題就是他跑AMD動態載入JS Class時的路徑是否跟專案中的目錄架構是一樣的，這時候就要對<code>Ext.application</code>中的<code>appFolder</code>屬性做調整。<a href="http://df1.github.com/blog/2012/02/16/integrate-ext-designer-with-java-web-project-in-eclipse/">我去年的一篇文章</a>是以Java EE的Web project為例，將Ext Designer 1.2整合Eclipse進行開發。印象中當時主要的技術堆疊大略是（純回憶，僅供參考）：前後端以REST進行溝通（JAX-RS）；Servlet及JAVA部分採用Spring來做DI及AOP；ORM使用JPA 2；local測試環境使用<a href="http://code.google.com/p/run-jetty-run/">run-jetty-run</a>。</p>

<h3>好文分享</h3>

<ul>
<li><a href="http://docs.sencha.com/ext-js/4-1/#!/guide/editable_grid">Node.js+mongodb+EditGrid範例</a></li>
</ul>


<h2>IE8效能問題</h2>

<p>這年頭很多人都愛用Firefox或Chrome進行開發，但是很遺憾的，咱們user可沒那麼先進。更令人沮喪的是Ext JS 4.0至4.0.7版本在IE8以下都有嚴重的效能問題。Sencha的解釋如下：</p>

<blockquote><p>  Ext JS 4 features a brand new rendering pipeline that is significantly more structured and extensible than the rendering process in Ext JS 3. All Components now render the same way, and are driven by XTemplates. They also follow a common hook point regime, enabling the framework and developers to extend or hook into the render process for each Component.</p>

<p>  While the new rendering architecture is a big step forward, it did create slow performance in some cases. In 4.0.1 and before the order of operations in the rendering process was not as efficient as it could have been, resulting in many more DOM updates than are actually needed. In 4.0.2 we have corrected this behavior, yielding significant render speed improvements.</p>

<p>  We have already identified further optimizations to the rendering pipeline that will be incorporated into Ext JS 4.0.3 and beyond. Performance is very important to all of us and making the framework as fast as we know it can be will remain a top priority for the team.</p></blockquote>

<p>因此這次公開的4.1版主要就是focus在解決在IE的效能問題，現在已經有改善許多。 但是，在開發期間，良心建議您偶爾還是把IE開來跑跑看，免得像小弟當初一樣，發現時已經距<del>引咎辭職</del>上線的日子不遠矣！</p>

<h2>參考連結</h2>

<ul>
<li><a href="http://www.sencha.com/products/extjs/">Ext JS官網</a></li>
<li><a href="http://www.sencha.com/products/architect/">Sencha Architect</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[OSDC.TW 2012: My Summary & Impressions]]></title>
    <link href="http://df1.github.com/blog/2012/04/17/osdc-2012-impressions/"/>
    <updated>2012-04-17T23:17:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/04/17/osdc-2012-impressions</id>
    <content type="html"><![CDATA[<p><img src="http://df1.github.com/attachments/2012-04-16-osdc-2012-impressions/OSDC2012Banner.png">
Last weekend I joined <a href="http://osdc.tw">OSDC.TW 2012</a> (Open Source Developers&#8217; Conference) in Sinica Academia, Taipei. It was a 2-day event (April 14-15, 2012) with 7 keynote speeches, 9 sessions (departed to 3 mini-confs for each, 27 topics in total), and 9 lightning talks. (Here is the <a href="http://osdc.tw/schedule#day1">official agenda</a>.) Since each talk lasted only for 30-40 minutes, there wasn&#8217;t much practical coding stuff. Instead, many ideas and hilarious jokes were given in those introductory yet mind-blowing talks. This article is a brief summary for myself, and it also covers certain impressions that I had got in each session. (I will fill them up if I have time)</p>

<h1>Update: Videos and slides of each session <a href="http://osdc.tw/schedule#day1">RELEASED</a>!</h1>

<div class="gallery">
<img src="http://i.imgur.com/ITjm1.jpg">
<img src="http://i.imgur.com/2QN4w.jpg">
<img src="http://i.imgur.com/uS6se.jpg">
</div>


<!--more-->


<div class="gallery" style="margin-top:0">
<img src="http://i.imgur.com/95OOu.jpg">
<img src="http://i.imgur.com/Wbmqy.jpg">
<img src="http://i.imgur.com/JayZt.jpg">
<img src="http://i.imgur.com/xRzBm.jpg">
<img src="http://i.imgur.com/Tra7g.jpg">
<img src="http://i.imgur.com/bcfnF.jpg">
<img src="http://i.imgur.com/Jtvko.jpg">
<img src="http://i.imgur.com/5xZdc.jpg">
<img src="http://i.imgur.com/JooSn.jpg">
<img src="http://i.imgur.com/ShhYW.jpg">
<img src="http://i.imgur.com/tsK6L.jpg">
<img src="http://i.imgur.com/B9VBK.jpg">
<img src="http://i.imgur.com/L6kac.jpg">
<img src="http://i.imgur.com/Lrrv7.jpg">
<img src="http://i.imgur.com/QFqSy.jpg">
<img src="http://i.imgur.com/IxzRN.jpg">
<img src="http://i.imgur.com/0jjry.jpg">
<img src="http://i.imgur.com/mFXtW.jpg">
<img src="http://i.imgur.com/unRfn.jpg">
<img src="http://i.imgur.com/lHIl0.jpg">
<img src="http://i.imgur.com/27wuM.png">
<img src="http://i.imgur.com/c2Nck.jpg">
<img src="http://i.imgur.com/bozDW.jpg">
<img src="http://i.imgur.com/RwKcs.jpg">
<img src="http://i.imgur.com/VehJp.jpg">
<img src="http://i.imgur.com/mwAtU.jpg">
<img src="http://i.imgur.com/LmsJP.jpg">
<img src="http://i.imgur.com/4y1qL.jpg">
<img src="http://i.imgur.com/4Jepm.jpg">
<img src="http://i.imgur.com/hjybH.jpg">
<img src="http://i.imgur.com/BOZ2x.jpg">
<img src="http://i.imgur.com/WHYoG.jpg">
<img src="http://i.imgur.com/yUFWV.jpg">
<img src="http://i.imgur.com/etB9C.jpg">
<img src="http://i.imgur.com/eLC3S.jpg">
<img src="http://i.imgur.com/fvIw0.jpg">
<img src="http://i.imgur.com/2i9vD.jpg">
<img src="http://i.imgur.com/5vynj.jpg">
<img src="http://i.imgur.com/U3JDo.jpg">
</div>


<h1>Day 1</h1>

<p>When I took highway bus and made to transit to Nangang, it was almost 9:30 AM. I felt regretful since the session opened at 9, and since the truth that I did not plan it well. Then I took another 15 minutes walking, which Google Map told me to do so, to Sinica Academia. Anyway, it was a deadly cloudy morning with regrets for missing the first keynote speech.</p>

<p>After taking the attendee&#8217;s badge and a crappy nonwoven Samsung bag from the multi-threaded registration desks, I managed to enter the main conference hall. The second session was just about to begin.</p>

<h2>Keynote: Mozilla B2G: Breaking Mobile Monopolies</h2>

<ul>
<li>Speaker: Dr. 宮力 (MOZILLA)</li>
</ul>


<p>It was the session I missed. What&#8217;s worse, there wasn&#8217;t much discussion on IRC for me to catch up, so I could only took a glance on the slide.
It looks like that this talk was more of a general overview about what Mizilla&#8217;s current endaevour than a technical talk. The summary was wrapped-up in the end of slide:</p>

<pre><code>*   Mozilla is committed to keep the mobile web free and open as it did to the desktop web
*   Join the project and/or partner with Mozilla to break the looming mobile monopoly!
*   Mozilla Taiwan is a key driver for B2G, and they are hiring!
</code></pre>

<h2>Keynote: Cocktails &#8211; Shaken, Not Stirred</h2>

<ul>
<li>Speaker: Eric Chuang (YAHOO)</li>
</ul>


<p>Yahoo has been yelling about their Mojito, Cocktails, and Manhattan for months (in chinese: 只聞樓梯響, only hear sound from staircase but no one comes), and finally, they are being released and open-source&#8217;d. This talk is a introduction and slight demonstration about their Mojito MVC framework based on node.js, and the Cocktails idea of an ecosystem mixing HTML5, node.js, CSS3, YUI3.</p>

<h3>Links</h3>

<ul>
<li><a href="http://developer.yahoo.com/blogs/ydn/posts/2012/04/yahoo%E2%80%99s-mojito-is-now-open-source/">Yahoo!’s Mojito is Now Open Source</a></li>
</ul>


<h2>Keynote: Samsung S Pen SDK</h2>

<ul>
<li>Chinese Topic: 從手寫筆、滑掌截圖、陀螺儀等應用看Android應用程式開發</li>
<li>Speaker: 史憲軍 (SAMSUNG)</li>
</ul>


<p>I was impressed by the awkwardness when someone got Samaung&#8217;s face slapped by asking their open-source plan during the Q&amp;A time lol. Okay I still hope these, how to say, legacy enterprices, to somehow dedicate their effort for the entire technology community to grow. But I did not think they ought to be criticized that way though. At least they sponsored, man. Anyway it&#8217;s just hilarious LOL</p>

<h2>Keynote: Lessons Learned from &#8220;Taiwan Weather&#8221; iPhone App Development</h2>

<ul>
<li>Chinese Topic: 談手機 Internet Client 開發：我從「台灣天氣」學到的事情</li>
<li>Speaker: zonble (KKBOX)</li>
</ul>


<h2>DIY Open Source Self-Propelled Artillery</h2>

<ul>
<li>Chinese Topic: DIY Open Source 無人自走砲</li>
<li>Speaker: mikimoto</li>
</ul>


<h2>Let&#8217;s Enjoy NodeJS &#8211; All Development in JavaScript</h2>

<ul>
<li>Speaker: fred chien</li>
</ul>


<h2>EtherCalc: A Real-Time Collaborated Spreadsheet</h2>

<ul>
<li>Chinese Topic: EtherCalc: 多人即時協作試算表</li>
<li>Speaker: audrey</li>
</ul>


<p>It was an EPIC talk given by <a href="http://en.wikipedia.org/wiki/Audrey_Tang">Audery Tang</a>, who&#8217;s known as one of the &#8220;10  greats of Taiwanese computing.&#8221; You should check <a href="http://www.youtube.com/watch?v=osJxSgbJuzY">the video</a> out, seriously!</p>

<h2>Apps on HTML5 and the new WebAPIs</h2>

<ul>
<li>Speaker: Thinker (Mozilla)</li>
</ul>


<p>This session was an introduction and live demonstration to B2G&#8217;s Web API. The entire B2G development model is very much like the development of a web-based browser extension. After that talk, so many people rushed into the booth of Mozilla, and unfortunately, I was at the booth too and left an evidence in their press photo. lol</p>

<p><img src="http://df1.github.com/attachments/2012-04-16-osdc-2012-impressions/me.png" title="&#34;Le me, and the Mozilla website&#34;" alt="&#34;Le me, and the Mozilla website&#34;"></p>

<h2>Automated trading toolkit</h2>

<ul>
<li>Speaker: clkao</li>
</ul>


<p>He introduced his Perl-based open-source trading toolkit called TradeSpring, enabling us to define the rule for our investments. Well though I have no knowledge to the stock stuff yet, I was still impressed and will give it a try whenever I am entering this area. &#8220;If you don&#8217;t have time to make up your strategy, don&#8217;t do investment,&#8221; said the speaker.</p>

<h3>Links</h3>

<ul>
<li><a href="https://github.com/tradespring/TradeSpring">TradeSpring</a></li>
</ul>


<h1>Day 2</h1>

<h2>Rails 3.1 : Asset Pipeline</h2>

<ul>
<li>Speaker: 小蟹</li>
</ul>


<h2>Dependency Management &#8211; Taking Ruby Development for Example</h2>

<ul>
<li>Speaker: yc ling</li>
</ul>


<h2>Functional Programming and What It Has Taught Me</h2>

<ul>
<li>Chinese Topic: 那些 Functional Programming 教我的事</li>
<li>Speaker: ihower</li>
</ul>


<h2>JavaScript Essential Patterns</h2>

<ul>
<li>Speaker: Othree</li>
</ul>


<h2>Keynote: Good collaboration in open source projects</h2>

<ul>
<li>Speaker: Allison Randal</li>
</ul>


<p>This was a talk given by the goddess of open source community &#8211; Allison, and made us open source programmers much happier. When Allison was speaking, Audrey was doing a real-time transcripting in IRC!! Here is the hidden cam (by eddie Kao)</p>

<iframe width="560" height="315" src="http://www.youtube.com/embed/dQ6nK_Yz14Q?rel=0" frameborder="0" allowfullscreen></iframe>


<h2>Keynote: Pix Table, The ORM from PIXNET</h2>

<ul>
<li>Chinese Topic: PIXNET 的 ORM，Pix Table</li>
<li>Speaker: ronnywang (PIXNET)</li>
</ul>


<p>Ronnywang is former moderator of PTT&#8217;s Joke forum! This topic was about how they implement their own ORM in PHP.</p>

<h2>Embedded Virtualization in Daily Life</h2>

<ul>
<li>Speaker: jserv (0xlab)</li>
</ul>


<p>Frankly speaking, I am too foreign to embedded system so I could barely understand those details. But it really sounded very interesting and lots of fun lol</p>

<h2>Lightning Talks</h2>

<ul>
<li><a href="http://www.youtube.com/watch?v=hMBzfggxCRo">如何在Hacker News攻佔前十名</a> - Dryman (Felix) (<a href="http://www.slideshare.net/ssuser5c831d/hacker-news">Slide</a>)</li>
<li><a href="http://www.youtube.com/watch?v=EHhWpYmJqvo">又一個誤聽GAE的悲劇</a> - Toomore</li>
<li><a href="http://www.youtube.com/watch?v=3W3NirrgssI">COOKPAD - AS YOUNG AS EVER</a> - 朴起煥</li>
<li><a href="http://www.youtube.com/watch?v=kwFx2_rVQD0">需求變更的反覆模型</a> - Ben Lau (<a href="http://www.plurk.com/p/g51aoe">Slide</a>)</li>
<li><a href="http://www.youtube.com/watch?v=-Zc-mgAhacM">GaiaSup - Spatial Pub/Sub Service for and kind of game or LBS apps</a> - BlueT</li>
<li><a href="http://www.youtube.com/watch?v=pDopC2cCXrc">Meta Class and Singleton Pattern In Python</a> - Hychen</li>
<li><a href="http://www.youtube.com/watch?v=NMtcmn2lkRA">中文Menu</a></li>
<li><a href="">JVM as the universal Language runtime</a> - Sunny Chan</li>
<li><a href="http://www.youtube.com/watch?v=i2uE_60DOac">簡單易懂的 Debian 打包魔法</a> - Yao Wei</li>
</ul>


<h1>Impressions in General</h1>

<p>This conference was held in the Academy of Anthropology &amp; Sociology (or whatever lol), whose building and facilities are so brand new. Each seat is with embedded power/network plug, erecting(?) microphone, and vote buttons. Their international conference hall, where all keynote speeches took place, is an ideal place indeed for developer events like this. We could listen to the speech and do live coding along with the speaker very well too. As I observed, the coverage of MacBook is over 70%. (I&#8217;d really want to buy one too if only I can afford orz.) Besides, the screen of each computer was almost consentient! Coding window, IRC chatting window, Plurk (I wonder why so many Taiwan developers uses this, I can almost identify them by their Plurk avatar on theit screen lol), few Facebooks, and nothing else! It was so AMAZING to see so many &#8220;screennames (in chinese: 大大)&#8221; from the internet, who may be my idols or <del>my &#8220;cyber-stalkees&#8221;</del> the ones I followed on Twitter/Plurk for long, to gather and sit around me! The only thing that I would complain was the crappy Wi-Fi that was unable to handle simultaneous trafffic of 500 people. I brought my wire next day and it was so much better then orz. Btw, it&#8217;s my first chance to show off a <code>140.109.*</code> IP!</p>

<p><img src="http://df1.github.com/attachments/2012-04-16-osdc-2012-impressions/seat.jpg" width="300" title="&#34;The seat table filled by attendees, I think we should try EtherCalc next time XD&#34;" alt="&#34;The seat table filled by attendees, I think we should try EtherCalc next time XD&#34;"></p>

<p>Outside the conference hall/rooms, there were 2 extremely long bars of de-luxe foods and drinks in 2 hallways respectively, and booths from many sponsors: Samsung, KKBOX, Pixnet, Trend Micro, Mozilla, Cookpad, Etu, OpenFoundry&#8230; etc. It&#8217;s just all the same, trade your namecards or fill questionnaire for those gifts. The only difference is that, those head-hunting questionnaires asked for a list of your ever-contributed open projects, and your Github account. Github account dude!! lol</p>

<p><img src="http://df1.github.com/attachments/2012-04-16-osdc-2012-impressions/trophy.JPG" width="300" title="&#34;All my trophies&#34;" alt="&#34;All my trophies&#34;"></p>

<p>Actually, it was my very first experience to an open-source community event, and it should be the doorstep for my commencement / commitment to this fascinating area. Though it&#8217;s late, it will never be too late, hopefully :p</p>

<p>Open source rocks! COSCUP, I&#8217;m coming!</p>

<h2>Reference Links</h2>

<ul>
<li><a href="http://osdc.tw">OSDC.TW 2012</a></li>
<li><a href="https://gist.github.com/2393705">IRC Log</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[網摘分享：jQuery到底是何方神聖？別怕，將他打回原形！]]></title>
    <link href="http://df1.github.com/blog/2012/04/09/jquery-striptease/"/>
    <updated>2012-04-09T23:17:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/04/09/jquery-striptease</id>
    <content type="html"><![CDATA[<p>（此文章參加<a href="http://ithelp.ithome.com.tw/js-ninja/">JavaScript忍之道</a>的『網摘分享』活動）</p>

<p>不知道當大家第一次聽到jQuery這個詞時，在心中浮現的第一個畫面是什麼？
是一個Java-base的query language？是一個java寫成的搜尋引擎？<del>還是一位超萌的小羅莉？（好像還沒人把它擬人化XD）</del></p>

<p>無論你聽見它芳名時候的第一印象為何，當你真正見到它的容貌時，想必心中那種悸動到現在還是難以忘懷吧！讓我們再來回顧一下：</p>

<!--more-->


<p><code>$("p.neat").addClass("ohmy").show("slow");</code></p>

<p>如果場景是企業的主管正抉擇是否導入jQuery的當下，看到第一個字是大大的<code>$</code>時，心中立即的疑問就是『那這套solution的license要多少錢？』
這時，你就會非常自信專業地答道
『老闆，jQuery是不用錢的啊！只要在<code>$</code>括號裡面打上您想選擇的條件，傳回來的就是<strong>jQuery物件</strong>。選出來之後，您想要對它做啥都不成問題！』</p>

<br/>


<p>沒錯，你想把它抓去阿魯巴都可以。（請自己寫plugin）</p>

<br/> 


<p>但問題來了，jQuery物件到底是啥？為啥它可以用<code>$</code>？為啥可以像上面那樣一直串下去？為啥它可以那麼強大？</p>

<h3>青菜底家啦</h3>

<p>這時候，就要看對岸同胞的原始碼解析了－－<a href="http://xiaofei85390656-163-com.iteye.com/blog/1449221">jQuery1.7系列一：jQuery 對象的實質</a></p>

<p>裡面將整個jQuery的最外圍架構拿出來討論。除了可以找到上面那些問題的解答之外，他也提到了jQuery作者使用的一些小trick
（browser不支援<code>undefined</code>？沒關係，啥都不要傳進去就是了…之類的）；另外也讓我們了解jQuery plugin的撰寫原理。</p>

<p>如果對文章中提到的<code>閉包（closure）</code>有看沒有懂，
可以參考TonyQ（Ptt soft_job版主）在javascript.tw聚會中對closure相關的變數scope常見問題說明。
影片後半段也對jQuery的原始碼做了解析，是講<strong>繁體中文</strong>的喔！（咦） 看影片吧！</p>

<iframe width="560" height="315" src="http://www.youtube.com/embed/KxItux9ZeA8?rel=0" frameborder="0" allowfullscreen></iframe>


<h2>參考連結</h2>

<ul>
<li><a href="http://xiaofei85390656-163-com.iteye.com/blog/1449221">jQuery1.7系列一：jQuery 對象的實質</a>（簡） - 晨曦的朝陽</li>
<li><a href="http://jquery.com/">jQuery官網</a></li>
<li><a href="http://ithelp.ithome.com.tw/js-ninja/">JavaScript忍之道</a></li>
<li><a href="http://js-tw.blogspot.com/">JavaScript.tw</a>及其<a href="https://www.facebook.com/groups/javascript.tw/">FB社團</a>（biweekly JS小聚）</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[突襲PiPoSea團隊：溫馨的Lean startup]]></title>
    <link href="http://df1.github.com/blog/2012/04/07/piposea-raid/"/>
    <updated>2012-04-07T13:18:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/04/07/piposea-raid</id>
    <content type="html"><![CDATA[<p><img src="http://df1.github.com/attachments/2012-04-07-piposea-raid/pipo.jpg" title="&#34;PiPoSea首頁登入畫面&#34;" alt="&#34;PiPoSea首頁登入畫面&#34;"></p>

<p>昨天（4/6）是傳說中的<a href="http://techorange.com/2012/04/06/appworks-demoday-4-2/">AppWorks Demo Day #4</a>，
也是<a href="http://piposea.com"><strong>PiPoSea</strong></a>&#8211;由我當年同lab的同學兼室友還有兩位學弟組成的創業團隊所開發的全新概念社群網路&#8211;
的Debut Day首度發表日！它受日本311大地震時那種地域性的關懷互助所啟發，以穿越陌生人群為中心思想，讓使用者在茫茫人海中，得以找尋生命中轉瞬即逝的緣分。話不多說，直接看看他們扣人心弦的介紹吧！</p>

<!--more-->


<iframe width="480" height="296" src="http://www.ustream.tv/embed/recorded/21626436" scrolling="no" frameborder="0" style="border: 0px none transparent;"></iframe>


<p>AppWorks Demo Day #4實況錄影（大約從1:23:25開始）</p>

<h2>突襲PiPoSea團隊紀錄</h2>

<p>PiPoSea團隊目前創業的據點位於土城一處不起眼的大樓民宅內。
上上上禮拜因為上台北又剛好沒事幹（=#3=），於是一通電話就約了出去吃個飯喇賽一下，順便參觀一下他們的公司。（雖然當時約得很不是時候，算是專案最後衝刺的非常時期吧XD）</p>

<p>目前整個team的workspace，基本上就跟大家想像中的創業空間的畫面相去不遠：
二三十坪的小小住宅內，大家都住在一起。客廳及餐廳為主要的工作空間，五人的team則睡在不同房間，可能有兩兩需要擠一間。光用想像的就覺得超溫馨！（<del>雖然我們大學時候可能更溫馨XD</del>）而工作空間內，有著每個開發人員心目中<a href="http://www.inside.com.tw/2012/02/16/programmer-productivity-tool">teamwork的基本配備</a>：沙發、電視、白板、強大的音響耳機、舒適的靠背椅、搭配雙螢幕的電腦、一台27&#8221; iMac、<del>還有電吉他</del>等等。整體的感覺差不多就<a href="http://jamesychen.tumblr.com/post/16956753149/waveface-inc">像這樣</a>（空間大概是縮小一半）。
這樣有沒有精實到？光住在一起就省了每個人一大筆台北租屋開銷了吧！雖然<a href="http://www.kuobrothers.com/article.php?id=63">某郭家兄弟文章</a>認為創業不應該在家裡，需要將工作及生活劃清界線云云；不過我認為，在very first project的階段，尤其是有人剛畢業、剛回國、剛退伍的情況下，車庫模式或許是一個非常好的team building model也說不定。（不過最近聽說要搬到新office了！）</p>

<p>當時也跟超屌的PM大大&#8211;Kirby在車上稍微小聊了一下他們當時的專案概況。接下先來介紹一下這個強大的團隊好了！</p>

<h3>Team Members</h3>

<ul>
<li><strong>Kirby Hu</strong>：傳說中的PM大大，享受高薪工作一年後毅然決然投身PiPoSea。直接看上面的影片就知道有多強大了XD</li>
<li><strong>Terry Huang</strong>：技術總監！沒話說的強大！想瞭解他的以後可以在<code>康熙來了</code>看專訪XD</li>
<li><strong>Curtis Chen</strong>：當時實驗室學弟中的一哥XD 負責所有前端相關F2E技術！</li>
<li><strong>Joe Tseng</strong>：帥到被找去拍廣告的學弟！ 負責後端python等開發！</li>
<li><strong>Lenny Chen</strong>：剛回國的留洋碩士，在美國有工作經驗，而目前算freelancer形式持續領美國薪水中（某人表示：幹超爽）負責手機端app開發！</li>
</ul>


<p>以上除了兩位學弟外，跟我都是大學的室友；而除了Lenny之外，都是本系多媒體網路實驗室的成員。說起我們lab member的實力真的是不容小覷阿！至今已有兩位學長分別開了<a href="http://www.nuazure.com">湛天</a>(<a href="http://www.pubu.com.tw">Pubu電子書</a>)跟<a href="http://www.kdanmobile.com">凱鈿行動科技</a>兩家公司，已經不知道接受過多少新聞媒體跟平面雜誌專訪了。PiPoSea也快了！<br/>
<img src="http://df1.github.com/attachments/2012-04-07-piposea-raid/hu1.jpg" title="&#34;Kirby在發表會上的英姿&#34;" alt="&#34;Kirby在發表會上的英姿&#34;">
<img src="http://df1.github.com/attachments/2012-04-07-piposea-raid/hu2.jpg" title="&#34;左邊就是傳說中的Jamie&#34;" alt="&#34;左邊就是傳說中的Jamie&#34;"></p>

<h3>使用技術</h3>

<p>這部分雖然只是聽Kirby用喇賽的形式稍微cover了一下，不過聽了之後對整個stack還是有一點畫面啦，如果講錯或是要補充再糾正我吧XD</p>

<p>Hosting部分，是使用皇家禮炮等級的Amazon EC2；server端是使用python（django／nginx等等）；DB則是使用mongo db；前端方面能用的工具技術就相當多了，至少有jQuery跟blueprint css（原本看prototype猜應該有bootstrap不過應該沒有XD）；在官網則是用wordpress跟drupal當CMS。行動端的技術就不太清楚，總之都很屌（靠）</p>

<p>幹超羨慕的，基本上幾乎就是把最新最好玩的玩具都拿來玩了啊！反觀我本身是在大公司工作，所用的solution都比較是偏企業端的技術，思考模式也是。來了之後才知道<strong>貴的玩具跟好玩的玩具的差別</strong>（彷彿別人都在玩變形金剛，自己卻在拼很貴的樂高這樣無誤XD 改天再來寫個工作近兩年心得好了，應該有很多東西可以寫XD）</p>

<p>美工設計部分的話，據說花了（可以講嗎？）找專業web designer做了<a href="http://allenhsudesign.com/web/web-piposea/">這個Mock-up</a>，我認為真的還算蠻便宜的啦XD</p>

<p>如果之後還能像最近比較早下班的話，我會再寫一篇測試心得的XD！</p>

<h3>以下是嘴砲</h3>

<p>創業，真的不是那麼容易的事。除了十足的勇氣之外，還要面對來自各方面與自己的壓力。能熬到現在這樣的成果，想必每個已經克服了許多掙扎，也一定經過了許多難能可貴的歷程。相信不管是走哪條路，只要還有夢想，life就永遠是個struggle吧。（靠對不起我不會寫這種文 下次不敢了XDD）</p>

<p>這次的發表會聽下來，確實可以感受到AppWorks對本土團隊培育的用心。除了培育了一批批成功deliver出很好很強大App的團隊之外，更重視的是每個team之後的獲利模式、去路、資金、還有整個大環境的發展及趨勢。現在網站一個一個開，一個比一個好用，揪竟是誰可以存活到最後？最好的結局就是被Google買走嗎？N年後會不會泡沫化？相信他們心中會有一套最佳解，解除每個app team心中所有的疑惑。而PiPoSea應該也已經思考過未來的方向，記得IPO Day時候要留點quota給我買就好（靠），到時候我會依約送一個<code>安必古思</code>匾額的（計算理論梗XDD）</p>

<h2>參考連結</h2>

<ul>
<li><a href="http://piposea.com">PiPoSea網站</a>（目前封測中）</li>
<li><a href="http://www.lirise.com">利昇</a><del>音響</del><a href="http://www.lirise.com">科技官網</a></li>
<li><a href="http://appworks.tw/incubator/">appWorks Ventures 之初創投</a></li>
<li>Inside - <a href="http://www.inside.com.tw/2012/02/16/programmer-productivity-tool">提升程式設計師生產力最好的工具是什麼？</a></li>
<li>Mr.Jamie - <a href="http://mrjamie.cc/2011/08/01/venture-capital-lean-startup/">創投為什麼要教 Lean Startup？</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[波笛身世二三事]]></title>
    <link href="http://df1.github.com/blog/2012/04/06/things-about-birdie/"/>
    <updated>2012-04-06T13:18:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/04/06/things-about-birdie</id>
    <content type="html"><![CDATA[<p>（傳說中欠了快兩年的文來了XD）</p>

<p><img src="http://i.imgur.com/GjHBv.jpg" width="500" title="&#34;波笛小時候（約4個月時）的處女拍（對我來說XD）&#34;" alt="&#34;波笛小時候（約4個月時）的處女拍（對我來說XD）&#34;"></p>

<p>來介紹一下我家的<code>波笛</code>，首先來個基本資料表好了！</p>

<table style="border-spacing: 3px;">
<tr>
    <th>姓名</th>
    <td>波笛、ボッディ、Birdie</td>
</tr>
<tr>
    <th>性別</th>
        <td>母</td>
</tr>
<tr>
    <th>生日</th>
    <td>2010年7月左右</td>
</tr>
<tr>
    <th>出生地</th>
    <td>新北市板橋車站附近巷弄內</td>
</tr>
<tr>
    <th>居住地</th>
    <td>新竹、台北、台中</td>
</tr>
<tr>
    <th>品種</th>
    <td style="line-height: 1;">
        <table style="display:inline-block;border:none;background:none;margin:0;"><tr>
            <td>三花貓，</td>
            <td style="background:rgb(227,155,102);">褐</td>
            <td style="background:white;">白</td>
            <td style="background:black;">黑</td>
        </tr></table>
    </td>
</tr>
<tr><th>手掌顏色</th><td>粉紅</td></tr>
<tr><th>結紮</th><td>是</td></tr>
<tr><th>身高體重</th><td>30cm, 4kg （身材略瘦）</td></tr>
<tr><th>其他特徵</th><td>右耳缺一角（母貓TNR標記）</td></tr>
<tr><th>性格</th><td>平時相當聒噪、怕陌生人、極度愛玩、喜歡刺激事物、不愛吃</td></tr>
</table>


<p>一切要從我的高中正妹同學<code>關貝貝</code>講起，他是一位獸醫師，目前在台北市執業；
而波笛呢，是他當時租屋處附近的一隻還蠻親人的流浪小貓。
因為正妹同學佛心來的診所提供了限量的免費結紮名額（雖然免費，不過設備跟麻醉都是用最高檔的，夠佛心了吧），波笛就成為了內定的貓選。
據說當時是個月黑風高的夜晚，而波笛就被裝在某個可憐的手提包內，直奔診所進行偉大的TNR計畫（TNR：trap, neuter, release 抓去結紮後再放回去原本棲息地）
因為當時某人身上有跳蚤，肚子裡面也都是滿滿的寄生蟲，就在診所待了好一陣子。</p>

<p>這是第一次進獸醫診所時的影片！當初第一眼看到他時候，就覺得實在有聒噪到。原本想說畢竟是小貓，長大之後應該會好一點，不過很遺憾…（ry</p>

<iframe width="420" height="315" src="http://www.youtube.com/embed/nNCZwmXw3LI?rel=0" frameborder="0" allowfullscreen></iframe>


<p>靠完全就狀況外阿！一般貓被帶離自己熟悉環境應該要很緊張才對吧，有人卻很享受獸醫院的住院鐵籠是怎樣XD？（當時樓下還住著一隻超大癩痢狗XD）
正妹同學在那同時就在FB大肆宣傳，而我這個貓奴命的當然也是預設慫恿對象。
『如果沒人要養的話，他就回街頭流浪了。<del>台北的冬天很冷的。</del>』（刪除線那句是我加的XDD）
我陷入了天人交戰，畢竟這真的是人生大事。
說時遲那時快，耳邊立刻傳來<strong>神</strong>的話語：『要有貓。』（艾涅爾‎：關我屁事）
於是某人的20年人生（貓生）就這樣獻身給一個沒前途的宅宅工程師了。（誤啦XD 我真的認真考慮很久才決定）</p>

<p>至於他是如何從親人的小小貓，變成現在這樣的大孬孬呢？中間又有甚麼不可告人的內幕呢？
下集待續（靠）</p>

<p>內收相簿圖多！</p>

<!--more-->


<h2>生活紀錄2010/11～2010/12</h2>

<div class="gallery">
<img src="http://i.imgur.com/GjHBv.jpg" alt= 如果開閃光就不可能拍到他張開眼睛←結論" />
<img src="http://i.imgur.com/PCa3E.jpg" alt="冬天專用恆溫暖爐床(Eee PC)" />
<img src="http://i.imgur.com/TWqqA.jpg" alt="鍵盤也照躺的" />
<img src="http://i.imgur.com/WMWX2.jpg" alt="上方暖爐" />
<img src="http://i.imgur.com/Njg9l.jpg" alt="打瞌睡了" />
<img src="http://i.imgur.com/7VTdr.jpg" alt="白手套特寫" />
<img src="http://i.imgur.com/scspb.jpg" alt="撩人的姿勢" />
<img src="http://i.imgur.com/IIy7A.jpg" alt="嫵媚的眼神" />
<img src="http://i.imgur.com/AAm56.jpg" alt="趴了XD" />
<img src="http://i.imgur.com/I2Ai2.jpg" alt="企圖在我的螢幕上留下四道爪痕(?)" />
<img src="http://i.imgur.com/XYyGP.jpg" alt="有沒有這麼享受" />
<img src="http://i.imgur.com/C8IBl.jpg" alt="瘦臉的拍照角度" />
<img src="http://i.imgur.com/GC3aM.jpg" alt="小姐你睡相可以再好一點" />
<img src="http://i.imgur.com/kjvZa.jpg" alt="貓掌特寫" />
<img src="http://i.imgur.com/B7LdS.jpg" alt="粉紅的喔" />
<img src="http://i.imgur.com/z4fdm.jpg" alt="對照比例" />
<img src="http://i.imgur.com/QuQnn.jpg" alt="睡死了" />
<img src="http://i.imgur.com/xXwNO.jpg" alt="正妹拍照 燈光是很重要的" />
<img src="http://i.imgur.com/A0kMr.jpg" alt="玩具1號" />
<img src="http://i.imgur.com/Ds9Oz.jpg" alt="窗邊曬太陽+怒瞪外面的吱吱叫的麻雀ing" />
<img src="http://i.imgur.com/sOyNG.jpg" alt="曬太陽就是一副死魚眼" />
<img src="http://i.imgur.com/SS8OR.jpg" alt="衝蝦?" />
<img src="http://i.imgur.com/vEbqs.jpg" alt="這鬧鐘已經被他摔到掉秒針了 愛德阿爾哭哭" />
<img src="http://i.imgur.com/TLcWD.jpg" alt="左邊隱約看到從一開始就放在馬桶上的貓砂盆  訓練他用馬桶的學前課程" />
<img src="http://i.imgur.com/njhw2.jpg" alt="若有所思" />
<img src="http://i.imgur.com/qsTvz.jpg" alt="睡著了" />
<img src="http://i.imgur.com/FyKf3.jpg" alt="硬撐中" />
<img src="http://i.imgur.com/dB8Fj.jpg" alt="垮了" />
<img src="http://i.imgur.com/iR9EU.jpg" alt="應該可以幫他做睡相全集" />
<img src="http://i.imgur.com/kMIo4.jpg" alt="這角度拍就很肥XD" />
<img src="http://i.imgur.com/ylJoR.jpg" alt="大肥圓臉特寫" />
<img src="http://i.imgur.com/6jZX8.jpg" alt="抽屜內 大家來找碴" />
<img src="http://i.imgur.com/yBbbc.jpg" alt="這樣也能鑽" />
<img src="http://i.imgur.com/31pqk.jpg" alt="台中的太陽" />
<img src="http://i.imgur.com/z7FFL.jpg" alt="伸懶腰(爪子勾我牛仔褲= =" />
<img src="http://i.imgur.com/uxFlL.jpg" alt="全家夯呀夯貓咪" />
<img src="http://i.imgur.com/xQ2cZ.jpg" alt="慵懶度100%" />
<img src="http://i.imgur.com/Udqe6.jpg" alt="老娘曬太陽你是有意見逆?" />
<img src="http://i.imgur.com/idW29.jpg" alt="一面烤熟了 翻面" />
<img src="http://i.imgur.com/teRU0.jpg" alt="還是敵不過相機吊繩的誘惑" />
<img src="http://i.imgur.com/ZzvjN.jpg" alt="自掛東南枝 死狀悽慘 (其實當下很激烈)" />
<img src="http://i.imgur.com/1L7ZZ.jpg" alt="就為了他的逗貓棒" />
<img src="http://i.imgur.com/WVg9j.jpg" alt="逆轉裁判貓咪版" />
<img src="http://i.imgur.com/3ePMb.jpg" alt="嗯哼?" />
<img src="http://i.imgur.com/LOdK3.jpg" alt="一定要坐得那麼愜意嗎" />
<img src="http://i.imgur.com/5hrFL.jpg" alt="密切注意上頭蜂蜜罐的動態" />
<img src="http://i.imgur.com/Gm3J1.jpg" alt="罩門2號 繩子" />
<img src="http://i.imgur.com/6fNkY.jpg" alt="通常可以玩到啥鬼姿勢都出現" />
</div>


<p>之後還有多照片影片，不過都沒啥時間整理囧，也是之後待續吧XDD（這人沒誠意）</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[無聊分享：一篇在PTT Joke版潛力40推的文章之各項統計]]></title>
    <link href="http://df1.github.com/blog/2012/04/05/ptt-joke-analytics/"/>
    <updated>2012-04-05T22:18:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/04/05/ptt-joke-analytics</id>
    <content type="html"><![CDATA[<p><code>眉批：昨天清明節放假，不過我老媽應該不知道我在家發廢文XD（誤）</code></p>

<p>其實自從搬家之後，這個網誌的網址幾乎還沒有公開過。
直到昨天，我打了一篇<a href="http://df1.github.com/blog/2012/04/03/celebrities-from-rage-comics-and-internet-memes/">Rage Comics的熟面孔們</a>之後，
中午就直接<a href="http://www.ptt.cc/bbs/joke/M.1333518102.A.6D4.html">PO上PTT就可版</a>，並附上該篇連結。</p>

<p><img src="http://df1.github.com/attachments/2012-04-05-ptt-joke-analytics/post.jpg" title="&#34;PTT文章資訊&#34;" alt="&#34;PTT文章資訊&#34;"></p>

<p>以下是當天中午到半夜（約12小時內）的流量紀錄與各項統計，僅供參考，不保證準確度跟參考價值。</p>

<!--more-->


<h2>訪客總覽</h2>

<p><img src="http://df1.github.com/attachments/2012-04-05-ptt-joke-analytics/overview.jpg" title="&#34;這是12小時內的數據，第二天整天造訪人數只剩3000出頭。估計一篇40推的文章可以吸引一萬人以上點閱網誌連結。&#34;" alt="&#34;這是12小時內的數據，第二天整天造訪人數只剩3000出頭。估計一篇40推的文章可以吸引一萬人以上點閱網誌連結。&#34;"></p>

<h2>客層</h2>

<p><img src="http://df1.github.com/attachments/2012-04-05-ptt-joke-analytics/g01.jpg">
<img src="http://df1.github.com/attachments/2012-04-05-ptt-joke-analytics/g02.jpg">
<img src="http://df1.github.com/attachments/2012-04-05-ptt-joke-analytics/g03.jpg"></p>

<h2>系統</h2>

<p><img src="http://df1.github.com/attachments/2012-04-05-ptt-joke-analytics/d01.jpg">
<img src="http://df1.github.com/attachments/2012-04-05-ptt-joke-analytics/d02.jpg">
<img src="http://df1.github.com/attachments/2012-04-05-ptt-joke-analytics/d03.jpg"></p>

<h2>行動裝置</h2>

<p><img src="http://df1.github.com/attachments/2012-04-05-ptt-joke-analytics/m01.jpg">
<img src="http://df1.github.com/attachments/2012-04-05-ptt-joke-analytics/m02.jpg">
<img src="http://df1.github.com/attachments/2012-04-05-ptt-joke-analytics/m03.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[無聊分享：Rage Comics的熟面孔們]]></title>
    <link href="http://df1.github.com/blog/2012/04/03/celebrities-from-rage-comics-and-internet-memes/"/>
    <updated>2012-04-03T23:18:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/04/03/celebrities-from-rage-comics-and-internet-memes</id>
    <content type="html"><![CDATA[<p>剛無聊去找了Rage Comics熟面孔的<strong>元捏他</strong>（先估狗了一下，似乎沒人跟我一樣無聊到一個一個去找=3=），簡單整理如下表。</p>

<p>P.S.因為怕有肖像權問題，所以下面都是翻攝自網路（XD）。
是說最近電視台真的很超過，整天youtube找新聞就算了，播NBA Linsanity畫面都直接翻攝不用錢的&#8230;</p>

<!--more-->


<table>
<tr>
    <td>對照圖</td>
    <td>常見使用場合(?)</td>
    <td>元捏他</td>
</tr>
<tr>
    <td><img src="http://df1.github.com/attachments/2012-04-03-celebrities-from-rage-comics-and-internet-memes/yao.jpg" width="300"></td>
    <td>Bitch please</td>
    <td>Yao Ming 姚明，這應該很多人知道</td>
</tr>
<tr>
    <td><img src="http://df1.github.com/attachments/2012-04-03-celebrities-from-rage-comics-and-internet-memes/jackie.jpg" width="300"></td>
    <td>WTF</td>
    <td>Jackie Chan，也很容易看出來</td>
</tr>
<tr>
    <td><img src="http://df1.github.com/attachments/2012-04-03-celebrities-from-rage-comics-and-internet-memes/obama.jpg" width="300"></td>
    <td>Not bad</td>
    <td>Obama 歐巴馬，這不用說了</td>
</tr>
<tr>
    <td><img src="http://df1.github.com/attachments/2012-04-03-celebrities-from-rage-comics-and-internet-memes/nicolas.jpg" width="300"></td>
    <td>You don&#8217;t say</td>
    <td>Nicolas Cage 尼可拉斯凱吉</td>
</tr>
<tr>
    <td><img src="http://df1.github.com/attachments/2012-04-03-celebrities-from-rage-comics-and-internet-memes/neil.jpg" width="300"></td>
    <td>True story</td>
    <td>Neil Patrick Harris，演員</td>
</tr>
<tr>
    <td><img src="http://df1.github.com/attachments/2012-04-03-celebrities-from-rage-comics-and-internet-memes/freddie.jpg" width="300"></td>
    <td>Close enough</td>
    <td>Freddie Mercury!!! 已故Queen主唱</td>
</tr>
<tr>
    <td><img src="http://df1.github.com/attachments/2012-04-03-celebrities-from-rage-comics-and-internet-memes/david.jpg" width="300"></td>
    <td>Are you serious?</td>
    <td>David Silverman，這比較不確定</td>
</tr>
<tr>
    <td><img src="http://df1.github.com/attachments/2012-04-03-celebrities-from-rage-comics-and-internet-memes/bean.jpg" width="300"></td>
    <td>If you know what I mean</td>
    <td>Mr. Bean 豆豆先生</td>
</tr>
<tr>
    <td><img src="http://df1.github.com/attachments/2012-04-03-celebrities-from-rage-comics-and-internet-memes/alien.jpg" width="300"></td>
    <td>&#8220;Women&#8221;</td>
    <td>Ancient Aliens先生，美國歷史頻道版眭澔平</td>
</tr>
<tr>
    <td><img src="http://df1.github.com/attachments/2012-04-03-celebrities-from-rage-comics-and-internet-memes/teacher.jpg" width="300"></td>
    <td>Terrible Teacher</td>
    <td>這真的查不到是誰XD 感覺像是商業圖庫的圖</td>
</tr>
</table>


<p>有沒有要補充的XDD</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[搬家完成！]]></title>
    <link href="http://df1.github.com/blog/2012/04/01/migration-completed/"/>
    <updated>2012-04-01T04:17:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/04/01/migration-completed</id>
    <content type="html"><![CDATA[<p>今天終於把之前在<a href="http://orokana-bl.blogspot.com">blogger</a>那邊的文章搬得差不多了！
說是說搬家，不過實際上大概只有十多篇（XD） 而且還是直接把HTML複製貼上的搬法orz 若是看起來礙眼就多包涵吧！
先來談談…</p>

<h2>為什麼要搬家？</h2>

<ul>
<li>因為今天愚人節</li>
<li>因為我看了最近很流行的<strong>為什麼系列文</strong>：

<ul>
<li>Sega Cheng：<a href="http://mmdays.com/2012/03/19/why-i-left-google/">我為什麼離開 Google（台灣）</a></li>
<li>GREG SMITH：<a href="http://www.nytimes.com/2012/03/14/opinion/why-i-am-leaving-goldman-sachs.html?_r=4&amp;pagewanted=all%3Fsrc%3Dtp&amp;smid=fb-share">我為什麼離開高盛</a></li>
<li>XDite：<a href="http://xdite-smalltalk.tumblr.com/post/18303489993">我為什麼想創業</a></li>
<li>James Whittaker：<a href="http://blogs.msdn.com/b/jw_on_tech/archive/2012/03/13/why-i-left-google.aspx">我為什麼離開 Google（美國）</a></li>
<li>vgod：<a href="http://blog.vgod.tw/2012/03/20/why-i-do-phd/">我為什麼要念博士</a></li>
<li>XDite：<a href="http://xdite-smalltalk.tumblr.com/post/17898487098/why-i-dont-get-a-master-degree">我不會念碩士</a></li>
<li><del>XDite：<a href="http://whydonti.heroku.com">為什麼我要弄一個為什麼產生器</a></del></li>
<li>（族繁不及備載）</li>
</ul>
</li>
</ul>


<p>好啦以上全誤，講正經的XD</p>

<p>想當年，我的第一個blog是用<a href="http://zh.wikipedia.org/wiki/Wallop">wallop</a>。那是Microsoft Research在2006年推出的社群網路，
當時也是讓我感到相當的『技術感覺良好』（誤了XD 不過當時RIA真的還是非Flash/Flex莫屬的時代阿！）
於是還加入他們所謂的Mod Developer Network（當時就有開發者royalty機制！），貢獻了不少垃圾。而他的API聽說還在我電腦某處囧。
但是，說時遲那時快，他以迅雷不及掩耳的速度被關掉了。幹我都還沒備份orz</p>

<p>在一個多月前，我決定繼續寫廢文。在幾經思考之下，最後挑了blogger。
（公司剛好沒擋*.blogspot.com；而且如果連Google的資料中心都不能信任&#8230;ry）</p>

<p>前幾個禮拜看到<a href="http://octopress.org">Octopress</a>這東西的時候，一開始覺得他的整個nature
（包含他是用<code>ruby</code>、 方便起local WEBrick/Rack 預覽、 可以上github控管並整合<a href="http://pages.github.com/"><code>github pages</code></a>、 <a href="http://sass-lang.com/"><code>SASS</code></a>、 採用<a href="http://markdown.tw"><code>markdown</code></a>等等） 讓我蠻心動的
 &#8211;最重要的是那種<strong>一切都在自己掌握中</strong>的感覺啊！ <del>（謎：ﾄﾞＳ）</del></p>

<p>但是當初看他內建的預設外觀覺得很so-so，就只是暫時放在心底深處當備案。
直到前幾天，看到一個高中生（超強！ 而且似乎是動漫圈內人XD）做的主題 &#8211;<a href="http://zespia.tw/Octopress-Theme-Slash/index_tw.html">Slash</a> 之後，我就下定決心動工了XDD（靠）</p>

<p><img src="http://df1.github.com/attachments/2012-04-01-migration-completed/oro.png" title="來個截圖紀念XD" ></p>

<p>搬是搬完了啦，不過欠好多文章orz</p>

<h2>Octopress Resources</h2>

<ul>
<li><a href="http://zespia.tw/Octopress-Theme-Slash/index_tw.html">目前套用的主題&#8211;Slash</a></li>
<li><a href="https://github.com/imathis/octopress/wiki/List-Of-Octopress-Themes">所有的Octopress主題列表</a></li>
<li><a href="https://github.com/imathis/octopress/wiki/Octopress-Sites">使用Octopress的站台列表</a></li>
<li><a href="https://github.com/imathis/octopress/wiki/3rd-party-plug-ins">Octopress外掛列表</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[八爪波笛]]></title>
    <link href="http://df1.github.com/blog/2012/03/30/octocat/"/>
    <updated>2012-03-30T11:22:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/03/30/octocat</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://df1.github.com/attachments/2012-03-30-octocat/octocat.png"><br/>
上禮拜看到了github的『八爪貓資料庫』 &#8211; <a href="http://octodex.github.com/">octodex</a>，馬上決定要做一隻波笛版，於是就有這隻八爪波笛了XD</p>

<p>各種格式需要請自取：
<a href="http://df1.github.com/attachments/2012-03-30-octocat/octocat.ai"><code>Illustrator</code></a>, <a href="http://df1.github.com/attachments/2012-03-30-octocat/octocat.fla"><code>Flash</code></a>, <a href="http://df1.github.com/attachments/2012-03-30-octocat/octocat.svg"><code>SVG</code></a>, <a href="http://df1.github.com/attachments/2012-03-30-octocat/octocat.ico"><code>ICO</code></a></p>

<p>可惜那邊只有github自家人才可以commit，殘念也（如果開放應該會亂糟糟吧）
下次再來介紹波笛好了XD</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Web-based Slideshows --Comparing impress.js, jmpress.js and reveal.js]]></title>
    <link href="http://df1.github.com/blog/2012/03/27/web-based-slideshows-comparing-impress-js-jmpress-js-reveal-js-with-prezi/"/>
    <updated>2012-03-27T13:17:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/03/27/web-based-slideshows-comparing-impress-js-jmpress-js-reveal-js-with-prezi</id>
    <content type="html"><![CDATA[<p>The story began when I was assigned with a jQuery sharing topic. Just few days before I heard the <strike><span style="color: #cccccc;">bad</span></strike> news, several cool web-slide things like <a href="http://bartaz.github.com/impress.js">impress.js</a>, <a href="http://shama.github.com/jmpress.js">jmpress.js</a> and <a href="http://lab.hakim.se/reveal-js/">reveal.js</a>&nbsp;ran across my screen. &#8220;Why not give it a crack?&#8221; said them. And I decided to try impress.js out.<br /></p>

<br />


<div class="separator" style="clear: both; text-align: center;">
<span id="goog_724297899"></span><span id="goog_724297900"></span><a href="http://www.blogger.com/"></a>
</div>


<p>Here is my brief comparison, with one of their competitors &#8211; Prezi:<br /></p>

<table border="1" cellpadding="0" cellspacing="0" style="border-collapse: collapse;">
<tbody>
<tr style="background: #CCCCCC;">
  <td style="text-align: left;" width="80"></td>
  <td><div style="text-align: center;">
<div style="text-align: left;">
Prezi</div>
</div>
</td>
  <td><div style="text-align: center;">
<div style="text-align: left;">
impress.js/jmpress.js</div>
</div>
</td>
  <td><div style="text-align: center;">
<div style="text-align: left;">
reveal.js</div>
</div>
</td>
 </tr>
<tr>
  <td style="background: #CCCCCC;"><div style="text-align: left;">
Technology</div>
</td>
  <td><div style="text-align: center;">
<div style="text-align: left;">
Flash</div>
</div>
</td>
  <td colspan="2"><div style="text-align: center;">
<div style="text-align: left;">
CSS3 + JS</div>
</div>
</td>
 </tr>
<tr>
  <td style="background: #CCCCCC;"><div style="text-align: left;">
Characteristic</div>
</td>
  <td colspan="2"><div style="text-align: center;">
<div style="text-align: left;">
zoom-in/out to give an overview to audience</div>
</div>
</td>
  <td><div style="text-align: left;">
provides more PowerPoint-like characteristics, also with the &#8220;basement slide&#8221;</div>
</td>
 </tr>
<tr>
  <td style="background: #CCCCCC;"><div style="text-align: left;">
Presentation Usability</div>
</td>
  <td><div style="text-align: left;">
mouse-scroll to zoom, drag to tilt</div>
</td>
  <td><div style="text-align: left;">
mouse-scrolling/dragging do nothing</div>
</td>
  <td><div style="text-align: left;">
the brand new 4-direction browsing</div>
</td>
 </tr>
<tr>
  <td style="background: #CCCCCC;"><div style="text-align: left;">
To jump to some page</div>
</td>
  <td><div style="text-align: left;">
zoom out and out, and click on your destination slide once you can see it</div>
</td>
  <td><div style="text-align: left;">
&#8220;URL hash&#8221; shows the ID of your page. Can be&nbsp;</div>
</td>
  <td><div style="text-align: left;">
Can be linked</div>
</td>
 </tr>
<tr>
  <td style="background: #CCCCCC;"><div style="text-align: left;">
Design Usability</div>
</td>
  <td><div style="text-align: left;">
Very friendly UI with its prevailing &#8221;<a href="http://prezi.com/learn/transformation-zebra-move-scale-rotate/">Zebra</a>&#8221;</div>
</td>
  <td colspan="2"><div style="text-align: left;">
You must have HTML skill! <font color="red">(Update 04/18: Not now, see [this][impressionist] for impress.js)</font></div>
</td>
 </tr>
<tr>
  <td style="background: #CCCCCC;"><div style="text-align: left;">
Extensibility</div>
</td>
  <td><div style="text-align: left;">
Constrained by its OOTB themes. However you can still insert your own SWF/PDF/youtube</div>
</td>
  <td colspan="2"><div style="text-align: left;">
You can insert whatever you can insert in a web page!</div>
</td>
</tr>
<tr>
  <td style="background: #CCCCCC;"><div style="text-align: left;">
Community</div>
</td>
  <td style="text-align: center;"><div style="text-align: left;">
Quite a few</div>
</td>
  <td colspan="2" style="text-align: center;"><div style="text-align: left;">
No community (or does github count?)</div>
</td>
</tr>
<tr>
  <td style="background: #CCCCCC;"><div style="text-align: left;">
Compatibility</div>
</td>
  <td><div style="text-align: left;">
iOS does not play flash. Though there&#8217;s iPad version, I worry about my inserted SWFs and PDFs.</div>
</td>
  <td colspan="2"><div style="text-align: left;">
How would you doubt the perfect HTML+CSS+JS combo? Except the bad compatibility in old browsers.</div>
</td>
 </tr>
<tr>
  <td style="background: #CCCCCC;"><div style="text-align: left;">
3D</div>
</td>
  <td><div style="text-align: center;">
<div style="text-align: left;">
N/A</div>
</div>
</td>
  <td><div style="text-align: left;">
all x-y-z position/rotation can be defined</div>
</td>
  <td><div style="text-align: left;">
3D transition</div>
</td>
 </tr>
<tr>
  <td style="background: #CCCCCC;"><div style="text-align: left;">
Pricing</div>
</td>
  <td><div style="text-align: center;">
<div style="text-align: left;">
freemium</div>
</div>
</td>
  <td><div style="text-align: center;">
<div style="text-align: left;">
free</div>
</div>
</td>
  <td><div style="text-align: center;">
<div style="text-align: left;">
free</div>
</div>
</td>
 </tr>
</tbody></table>


<br />


<br />


<h2>Related Links</h2>

<ul>
<li><a href="http://tutorialzine.com/2012/02/css3-product-showcase/">Making an Impressive Product Showcase with CSS3</a> - tutorialzine</li>
<li>(updated 2012/04/05) <a href="http://tympanus.net/codrops/2012/04/05/slideshow-with-jmpress-js/">SLIDESHOW WITH JMPRESS.JS</a> - codrops</li>
<li>(updated 2012/04/18) Impressionist &#8211; <a href="https://github.com/hsivaramx/Impressionist">Online Visual Editing Tool</a> for Impress.js (latest: <a href="http://www.hsivaram.com/impressionist/alpha3/">Alpha3</a>)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[酷炫的web投影片：impress/jmpress.js與reveal.js]]></title>
    <link href="http://df1.github.com/blog/2012/03/25/cool-web-slides-impress-js-jmpress-js-reveal-js/"/>
    <updated>2012-03-25T13:17:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/03/25/cool-web-slides-impress-js-jmpress-js-reveal-js</id>
    <content type="html"><![CDATA[<p>一年多前，咱們team用了一個flash-base的簡報工具－－<a href="http://www.prezi.com/" target="_blank">Prezi</a>，
向老闆報告某雲端應用的讀書會sharing。那是個多麼美好的時光，也是多麼糟糕的時光阿(遠目)<br /></p>

<br />


<p>Prezi的概念就是：畫布是無限大的，你可以定義每個頁面的框在畫布的哪個位置、大小；播放時候會以zoom-in/out的形式，可以帶給觀眾在單一個主題上overview與微觀的整體層次感。當初令我印象最深刻的就是某個prezi實習生做的<a href="http://prezi.com/xcit4zbat6sw/sweet-recipe-to-solving-problems/" target="_blank">Sweet recipe to solving problems</a>(真的是Epic！)。如今Prezi的知名度應該已經有相當程度的提升，也讓我跌破眼鏡的開始支援了iPad（應該是開發了flash轉CSS3？我沒iPad所以不確定）。如果還沒體驗過的話，可以直接去
<a href="http://www.prezi.com/" target="_blank">Prezi</a>&nbsp;上逛逛別人做好的，個個都是熱情奔放、創意無限！<br /></p>

<table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody>
<tr><td style="text-align: center;"><a href="http://1.bp.blogspot.com/-HFX5DC8Bf-I/T28aRi34DXI/AAAAAAAABkM/APfd36gK0RU/s1600/2012-03-25+21-14-11.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="224" src="http://1.bp.blogspot.com/-HFX5DC8Bf-I/T28aRi34DXI/AAAAAAAABkM/APfd36gK0RU/s320/2012-03-25+21-14-11.png" width="320" /></a></td></tr>
<tr><td class="tr-caption" style="text-align: center;">Prezi的播放介面</td></tr>
</tbody></table>


<br />


<div style="text-align: left;">
最近，手上又有個關於jQuery的sharing topic。剛好在開始準備的前幾天，我看到了讓我眼睛一亮的玩意－－<a href="http://bartaz.github.com/impress.js">impress.js</a>、<a href="http://shama.github.com/jmpress.js">jmpress.js</a>和<a href="http://lab.hakim.se/reveal-js/">reveal.js</a>。因為剛好需要對jQuery的功能做live demo，如果能在slide上面就直接辦到，這是多麼美妙的一件事啊！當然是先用再說囉。</div>


<br />


<table align="center" cellpadding="3" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody>
<tr>

<td style="text-align: center;"><a href="http://bartaz.github.com/impress.js" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="150" src="http://2.bp.blogspot.com/-CcKU5md9xbE/T28aCDgXDyI/AAAAAAAABkE/esPzJ5B-BRo/s320/2012-03-25+20-27-26.png" /></a></td>

<td style="text-align: center;"><a href="http://shama.github.com/jmpress.js" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="150" src="http://4.bp.blogspot.com/-JcFoEZWAFaA/T3B8DM7UAeI/AAAAAAAABkk/BFV4kDSv54s/s320/2012-03-26+22-20-42.png" /></a></td>

<td style="text-align: center;"><a href="http://lab.hakim.se/reveal-js/"><img border="0" height="150" src="http://2.bp.blogspot.com/-0YfuivlNJ04/T28aA7LvzwI/AAAAAAAABj8/0Qu3IObTUs0/s320/2012-03-25+20-27-55.png" style="margin-left: auto; margin-right: auto;" /></a></td></tr>
</tbody></table>


<div class="separator" style="clear: both; text-align: center;">
<span id="goog_724297899"></span><span id="goog_724297900"></span><a href="http://www.blogger.com/"></a>
</div>


<br />


<p>它們都是以CSS3+JS為主的技術來實現web投影片播放：impress.js簡單的說就是100%向prezi致敬（官網承認的），將整個無限畫布的概念<strike><span style="color: #999999;">抄</span></strike>承襲了下來；jmpress.js則是繼續<strike><span style="color: #999999;">抄</span></strike>承襲了impress.js， 加入了jQuery/jQuery UI，強調他不只可以當作投影片，更可以拿來當成網站用；reveal.js則是比較不玩這麼fancy的東西，只提供3種轉場效果&amp;程式碼自動上色，整體播放下來的體驗會比較像PowerPoint或Keynote。比較炫的就是除了←→換頁外，還可以使用↑↓方向鍵來進入一張投影片的「地下室」（這樣講有點抽象，直接<a href="http://lab.hakim.se/reveal-js/">去玩玩看</a>就知道啦XD）<br /></p>

<br />


<br />


<p>於是，我當然是挑了比較酷炫的impress.js來試試看（為什麼要demo jQuery卻不用jmpress.js呢？因為我做完才發現有它的存在orz）。</p>

<br />


<p>最後，來個小小的比較（個人意見）：<br /></p>

<br />


<table border="1" cellpadding="0" cellspacing="0" style="border-collapse: collapse;">
<tbody>
<tr style="background: #CCCCCC;">
  <td width="80"></td>
  <td><div style="text-align: center;">
Prezi</div>
</td>
  <td><div style="text-align: center;">
impress.js/jmpress.js</div>
</td>
  <td><div style="text-align: center;">
reveal.js</div>
</td>
 </tr>
<tr>
  <td style="background: #CCCCCC;">使用技術</td>
  <td><div style="text-align: center;">
Flash</div>
</td>
  <td colspan="2"><div style="text-align: center;">
CSS3 + JS</div>
</td>
 </tr>
<tr>
  <td style="background: #CCCCCC;">簡報特性</td>
  <td colspan="2"><div style="text-align: center;">
以zoom-in/out的形式，帶給觀眾整體感</div>
</td>
  <td>提供較多如PowerPoint簡報特性的功能，並提供「地下室」</td>
 </tr>
<tr>
  <td style="background: #CCCCCC;">操作性</td>
  <td>可隨時使用滑鼠滾輪自由放大縮小；可自由拖移畫布位置</td>
  <td>無法使用滾輪、拖移</td>
  <td>四向方向鍵的創新模式</td>
 </tr>
<tr>
  <td style="background: #CCCCCC;">跳頁方便性(跳到很遠的投影片)</td>
  <td>須用滾輪縮小後，點選該投影片方可跳至該頁</td>
  <td>在URL上的#號(hash)後面會顯示該頁面ID。可以直接在網址列上修改ID跳至想要的頁面，也可以自己加上其他投影片的連結；可以用瀏覽器的上一頁/下一頁/瀏覽歷程等操作</td>
  <td>可在頁面上自己加連結，但是一般跳頁時不會更新hash，所以重新整理之後投影片會跑掉，也不能用上一頁/下一頁</td>
 </tr>
<tr>
  <td style="background: #CCCCCC;">製作難度</td>
  <td>提供功能相當完整的設計介面，可方便地編輯整個大畫布。他主打的「<a href="http://prezi.com/learn/transformation-zebra-move-scale-rotate/">斑馬環</a>」(移動/旋轉/放大縮小工具，就是prezi的logo那個圓形怪怪的東西)也是此介面的一大特色</td>
  <td colspan="2">需有HTML基礎方能看懂其原理。目前入門的門檻相對高很多。(如：一個&lt;div
  class=”slide”&gt;&lt;/div&gt;為一張投影片)<font color="red">(4/18更新：已經有人製作impress線上編輯工具)</font></td>
 </tr>
<tr>
  <td style="background: #CCCCCC;">擴充性</td>
  <td>被內建的主題限制而無法自訂字型顏色等基本屬性。但可以自行匯入flash(swf)、PDF、圖片等資源(上面提到的recipe範例就是插入了一個龐大的flash)</td>
  <td colspan="2">只要是在網頁上可以插入的東西都可以加進來！ (要多有彈性就多有彈性，但是相對的就沒有一個良好的擴充架構)</td>
</tr>
<tr>
  <td style="background: #CCCCCC;">社群/網路資源</td>
  <td style="text-align: center;">相當豐富</td>
  <td colspan="2" style="text-align: center;">無社群 (github算嗎XD)</td>
</tr>
<tr>
  <td style="background: #CCCCCC;">相容性</td>
  <td>Flash不相容於iOS。雖然有推出iPad版本，但所插入的flash、PDF等元件應該凶多吉少</td>
  <td colspan="2">HTML+CSS+JS是未來的web標準技術。唯對舊版瀏覽器相容性仍較差</td>
 </tr>
<tr>
  <td style="background: #CCCCCC;">3D特效</td>
  <td><div style="text-align: center;">
目前無提供</div>
</td>
  <td>可以指定傾角、xyz軸位置等，做出很酷炫的3D效果</td>
  <td>轉場時有3D特效</td>
 </tr>
<tr>
  <td style="background: #CCCCCC;">收費</td>
  <td><div style="text-align: center;">
freemium模式</div>
</td>
  <td><div style="text-align: center;">
免費</div>
</td>
  <td><div style="text-align: center;">
免費</div>
</td>
 </tr>
</tbody></table>


<br />


<p>現在CSS跟JS的技術都有爆炸性的成長，其實還有很多更酷炫的方式來呈現簡報(如parallax scrolling的：<a href="http://layrr.com/">layrr</a>、<a href="http://www.nike.com/jumpman23/aj2012/">Nike AJ球鞋網頁</a>等等)。但是真的就流於網頁程式設計苦工了，需要評估有沒有值那個成本。</p>

<p>喜歡嗎？去fork一個你的Limpress.js吧XD！ (趕風潮XD)</p>

<h2>延伸閱讀</h2>

<ul>
<li><a href="http://tutorialzine.com/2012/02/css3-product-showcase/">用impress.js製作產品展示網站</a> - tutorialzine（大推此站）</li>
<li>（2012/04/05更新）<a href="http://tympanus.net/codrops/2012/04/05/slideshow-with-jmpress-js/">使用jmpress.js製作商品展示網站</a> - codrops</li>
<li>（2012/04/18更新）Impressionist &#8211; Impress.js的<a href="https://github.com/hsivaramx/Impressionist">線上編輯工具</a>（目前版本<a href="http://www.hsivaram.com/impressionist/alpha3/">Alpha3</a>）</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Be a Rockstar Developer 當個搖滾開發人員]]></title>
    <link href="http://df1.github.com/blog/2012/03/21/be-a-rockstar-developer/"/>
    <updated>2012-03-21T13:17:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/03/21/be-a-rockstar-developer</id>
    <content type="html"><![CDATA[<p>最近在幾篇文章裡看到了Rockstar Developer這個字眼（似乎有點LAG了），如果要翻的話就是『搖滾開發人員』這樣？
就我的認知，指的可能是在技術社群內很活躍的名人；在一個團隊內類似『技術總監』的角色；或是簡單的說，就是你很崇拜的那種程式人員。<br /></p>

<br />


<p>來看看別人怎麼看這種人XD （以下加一點個人嘴砲）<br /></p>

<br />


<h2><a href="http://www.readwriteweb.com/archives/top_10_software_engineer_traits.php">十大特質</a></h2>

<p>出處：<a href="http://www.readwriteweb.com/archives/top_10_software_engineer_traits.php">Top 10 Traits of a Rockstar Software Engineer</a> By Alex Iskold</p>

<ol>
<li><b>Loves To Code</b><br />&#8211; 這不用說了，要有freak-out的精神！</li>
<li><b>Gets Things Done</b><br />&#8211;&nbsp;這需要一定的毅力，如《人月神話》所說：滿足了我們潛藏於內心創造事物的渴望；但專案時程和過程中的種種瓶頸可是很難熬的。另外最近scrum等等agile methodology也是很熱的議題，對尋找最佳實務提供很多的創新解法。</li>
<li><b>Continuously Refactors Code</b><br />&#8211;&nbsp;看了幾本書之後就很HIGH的去改以前的code</li>
<li><b>Uses Design Patterns</b><br />&#8211;&nbsp;NPC表示：去找在那屋子裡的GoF先知吧(?)</li>
<li><b>Writes Tests</b><br />&#8211;&nbsp;要寫得夠廣，也要考慮以後方便做regression test。目標是coverage 100%</li>
<li><b>Leverages Existing Code</b><br />&#8211;&nbsp;Apache Commons之類的，做之前先google準沒錯</li>
<li><b>Focuses on Usability</b><br />&#8211;&nbsp;與其被嫌了之後還要改，不如(ry</li>
<li><b>Writes Maintainable Code</b><br />&#8211;&nbsp;架構要設計得好，還是要先去看Design Patterns</li>
<li><b>Can Code in Any Language</b><br />&#8211;&nbsp;更廣義的說應該是快速pickup的能力?</li>
<li><b>Knows Basic Computer Science</b><br />&#8211;&nbsp;囧 快忘光了</li>
</ol>


<br />




<!--more-->


<h2>What makes a ‘Rockstar’ Developer?</h2>

<p>出處：<a href="http://www.krotscheck.net/2010/01/10/what-makes-a-rockstar-developer.html">What makes a ‘Rockstar’ Developer?</a> By krotscheck</p>

<ol>
<li>They don’t think of themselves as rock stars.</li>
<li>They have a proven track record of multiple shipped products.</li>
<li>They care more about frameworks than plumbing.</li>
<li>They’re not willing to work for free</li>
<li>They believe in development process and best practices to speed up their work.</li>
<li>They have a positive attitude.</li>
<li>They get uncomfortable when you ask about their social life.</li>
<li>You don’t want Alphabet/Acronym soup in their technical skills.</li>
<li>They’re involved in the community.</li>
<li>You respect them</li>
</ol>


<p>第6、10點大認同<br /></p>

<br />


<h2>如何成為明星開發人員?</h2>

<p>出處：The question <a href="http://www.quora.com/How-does-one-become-a-rockstar-developer">&#8220;How does one become a &#8220;rockstar&#8221; developer?&#8221;</a> in Quora answered by Andrew Berman</p>

<div>
<div>
<ol>
<li>儘可能找一個這樣的優秀導師：他樂意批評你的程式，並傳授他是如何解決問題。當你的水準已達水準時，你可以正當地挑戰你的導師觀點，並獲得一些寶貴的辯論。</li>
<li>經常提高你所在解決問題的難度和範圍。大多數人並沒有20年的經驗，他們只有1年的經驗，只不過反覆使用了20年。別做這種人。</li>
<li>關注這些東西：文檔、方法名或函數名、（變數名）、廣泛寫測試案例。你的程式必須看起來專業。</li>
<li>粗略看看所有的標準
API&nbsp;，以便知道
API&nbsp;中有什麼。然後，當你首次使用某個特定
API&nbsp;時，來回地學習它。如果正好是你學過的語言，並且又有原始碼，也可以看看。</li>
<li>如果不完全理解某寫東西，得鞭策自己去了解它，得經常深入去研究。</li>
<li>儘可能選擇使用你的程式語言的最佳IDE。反覆了解IDE。一個優秀的IDE，對你有莫大的幫助。</li>
<li>當面對一個新挑戰（比如說，你從沒有用SOAP/XML），在你開始寫程式之前，做些廣泛研究。在網路上找找，或者到你的API中看看，是否能找到其他人解決對應問題的最新最佳解。三思而後行。</li>
<li>謹記，通常你正在寫的程式會交接給他人所用。和客戶經常保持聯繫。控制好他們的期望，展示出你的技能，確保他們知道你是最棒的。時刻謹記社交方面的東西。</li>
</ol>
</div>
</div>


<div>
<br />
這年頭，找工作還要去衝一下stackoverflow reputation還有github watch/fork數之類的年代（雖然在台灣應該不必，但是看到那類的網站開始bundle求職服務就覺得有壓力了囧）該是好好充實自己的時候了。</div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SharePoint 2010 Branding 十訣]]></title>
    <link href="http://df1.github.com/blog/2012/03/04/10-tips-for-sharepoint-branding/"/>
    <updated>2012-03-04T13:17:00+08:00</updated>
    <id>http://df1.github.com/blog/2012/03/04/10-tips-for-sharepoint-branding</id>
    <content type="html"><![CDATA[<p>最近突然接到一個消息：我們部門將為另外一個處（division）開設一系列的SharePoint Sharing課程（有點拗口）。而我負責的兩個主題其中一個是關於UI Design &amp; Branding，於是便寫了這篇文節錄一些我比較有心得的部分。<br /></p>

<br />


<p>SharePoint 2010這東西，是大約去年的五月，我被徵召當UI救火隊時候開始碰的。說實在的，在這之前對於微軟的企業端solution、CMS、還有ASP.NET都完全沒有任何的接觸；不過也是因為這個task，我才算真正進入CSS以及jQuery的大門（算是一個蠻神奇的進入點orz）。<br /></p>

<br />


<p>首先簡介一下我們系統。它本身是跨公司內外的網站，但並不是一個內容取向的網站；而是主要由一個個partner-collaboration性質的AP（在這邊當然是web part形式）所構成
－－<strike>看起來純粹是因為政治及某些人的KPI等等不關我事的因素而採用此solution</strike>。先說說我負責的範圍：<br /></p>

<br />


<ol>
<li><b>整體UI設計及Branding：</b>意思就是把它變成完全不像SharePoint，並且可以讓客戶留下好印象、每個畫面截圖都可以拿來發press release的站。</li>
<li><b>首頁中所有功能：</b>跟user談了首頁layout、carousel（圖文輪播）、登入框、還有額外的佈告系統。</li>
<li><b>實作其中一個AP：</b>使用ASP.NET加上DevExpress套件的報表/圖表系統。</li>
</ol>


<br />


<br />


<p>而今天要講的就是看似最簡單，但實際上最難上手的UI這部分。當時是處於前一個assignee開天窗，進度正火燒屁股的狀態。首先，我們整個UI救火團隊一共有3人：我老闆（負責coordinate）、我（萬用programmer）、還有從其他部門借調來part-time support的美工（也是剛工作不久的）。以下是我們大略的工作流程（沒錯幾乎就是waterfall，或是你可以叫他always-sprint的一人scrum）：<br /></p>

<!--more-->


<br />


<ul>
<li>Identify stakeholder（老闆）、Skill pickup （我，持續進行貫串全文）</li>
<li>Benchmarking：survey所有類似特性的網站
（我）&nbsp;並拿出來討論（三人）</li>
<li>談需求（三人、user），設計wireframe（我、美）</li>
<li>設計多個design comps <span style="font-size: xx-small;">（
純圖片的整體設計稿）</span>（美）</li>
<li>User決定後，做出切好的HTML單一網頁及CSS
（美）</li>
<li>開始沒日沒夜的master page實作及fine-tune
&nbsp;（我）</li>
<li>開始製作首頁功能（我）<br /><br />主體大致OK後，開始AP端部分的工作（extremely lousy）</li>
<li>制定AP的UI/Glossary Guideline及audit機制 （三人、AP團隊）</li>
<li>DevExpress的CSS overriding （我、美）</li>
<li>fine-tune再
fine-tune（我）<br /><br />接下來是最後</li>
<li>整合之後的master page再美化：如頁面對齊、stretching、footer等JS功能（我）</li>
<li>Deployment（我）</li>
</ul>


<p>其中，skill pickup無疑是最重要的部分。至少需要指派一個人來對整個架構流程進行全盤的瞭解：對於各種需求，必須知道哪些可以使用OOTB （out of the box，指原本package就有提供的功能）、哪些是需要自己慢慢刻、要如何刻等等；在真正開發過程中也須由他來扮演SD lead以及其他team的consult對象。在此我先來推一本我當初唯一的參考書：<br /></p>

<table align="center" cellpadding="0" cellspacing="0" class="tr-caption-container" style="margin-left: auto; margin-right: auto; text-align: center;"><tbody>
<tr><td style="text-align: center;"><a href="http://4.bp.blogspot.com/-3wYSwPCtbL4/T1NOjxjsL1I/AAAAAAAABgY/S9gQ3kP3Jto/s1600/%E5%9C%96%E7%89%8710.png" imageanchor="1" style="margin-left: auto; margin-right: auto;"><img border="0" height="320" src="http://4.bp.blogspot.com/-3wYSwPCtbL4/T1NOjxjsL1I/AAAAAAAABgY/S9gQ3kP3Jto/s320/%E5%9C%96%E7%89%8710.png" width="253" /></a></td></tr>
<tr><td class="tr-caption" style="text-align: center;">書名：Professional SharePoint 2010 Branding and User Interface Design<br />
作者：Randy Drisgill等<br />
出版商：Wrox</td></tr>
</tbody></table>


<p>（P.S. 這本書看著看著會很想吃鬆餅XD）<br /></p>

<br />


<p>說十訣什麼的其實有點自以為是，不過以下這些都是綜合許多專家還有我的經驗整理出來的一些小tip，希望能減輕生master page時的痛苦。<br /></p>

<br />


<h2>Tip #1：導覽列（Navigation）</h2>


<p>在SharePoint2007時代，上方的navigation是以巢狀表格方式render；到了2010，預設是使用&lt;ul&gt;&lt;li&gt;的形式（UseSimpleRendering=true情況下）。這使得CSS的撰寫簡單了許多。<br /></p>

<div class="separator" style="clear: both; text-align: center;">
</div>


<div class="separator" style="clear: both; text-align: center;">
<a href="http://2.bp.blogspot.com/-lLEnQbR3QrI/T1NRZDdgxdI/AAAAAAAABgg/grgW4iqvuX0/s1600/%E5%9C%96%E7%89%871.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/-lLEnQbR3QrI/T1NRZDdgxdI/AAAAAAAABgg/grgW4iqvuX0/s1600/%E5%9C%96%E7%89%871.png" /></a></div>


<br />


<h2>Tip #2：彈出式選單</h2>


<p>在master page可以用MaximumDynamicDisplayLevels定義最大的彈出層數。在每個sharepoint的site裡面可以個別設定navigation的形式，另外也有許多內建的sitemap可以選擇。在我們user的需求中，他們不使用彈出的形式；而是希望將所有子節點已樹狀形式攤平顯示，而這只要override少許CSS就可以搞定。<br /></p>

<div class="separator" style="clear: both; text-align: center;">
<img border="0" src="http://4.bp.blogspot.com/-D31iEE60sUQ/T1NE27YgohI/AAAAAAAABfY/zY9LC0dGw6o/s1600/%E5%9C%96%E7%89%872.png" width="500" /></div>


<div class="separator" style="clear: both; text-align: center;">
<br /></div>


<h2>Tip #3：不要再去發明輪子</h2>


<p>可以使用微軟或許多前輩提供的starter master page開始做branding。裡面有非常詳盡的註解，可以讓你了解每個區段到你是做啥用的。<br /></p>

<ul>
<li>Microsoft’s Starter master page: &nbsp;http://code.msdn.microsoft.com/odcSP14StarterMaster. This Starter master page was built for SharePoint &nbsp;Foundation 2010, &nbsp;SharePoint Server 2010</li>
<li>Randy Drisgill’s Starter master pages: &nbsp;（http://startermasterpages.codeplex.com）&nbsp;</li>
<li>Heather&#8217;s Base Master Page: http://www.heathersolomon.com/downloads/heathersbasemasterpage.zip</li>
</ul>


<br />


<div>
<h2>Tip #4：不要亂砍master page的區段</h2>
</div>


<div>
就算是不需要用的元件，也不要貿然將它直接砍掉，否則可能會造成整個站壞掉的悲劇（還是有辦法復原就是了）。可以將用不到的區段移到下圖的<span style="font-family: 'Courier New';">&lt;</span><span style="font-family: 'Courier New';">asp:Panel</span><span style="font-family: 'Courier New';">
</span><span style="font-family: 'Courier New';">runat</span><span style="font-family: 'Courier New';">=“server”
visible=“false”&gt;</span>區塊裡面。</div>


<br />


<div class="separator" style="clear: both; text-align: center;">
<a href="http://4.bp.blogspot.com/-Y5U7PTf5aGs/T1NE5ZO1j9I/AAAAAAAABfg/1TUtoIETuOs/s1600/%E5%9C%96%E7%89%873.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-Y5U7PTf5aGs/T1NE5ZO1j9I/AAAAAAAABfg/1TUtoIETuOs/s1600/%E5%9C%96%E7%89%873.png" /></a></div>


<br />


<h2>Tip #5：Page Layouts</h2>


<p>如果你用的是publishing site（我們只在布告欄功能有用到），記得設定一個預設的layout，並注意是否有設好<b>可用layout清單</b>。<br /></p>

<div class="separator" style="clear: both; text-align: center;">
<img border="0" src="http://1.bp.blogspot.com/-qSVsKC9H-C8/T1NE6UWZsjI/AAAAAAAABfo/3C-kaU0Xcgg/s1600/%E5%9C%96%E7%89%874.png" width="500" /></div>


<h2>Tip #6：參考欄位</h2>


<p>很多東西可以用server-side control來減少maintain的effort。<br /></p>

<div class="separator" style="clear: both; text-align: center;">
<a href="http://4.bp.blogspot.com/-dvCe8IZ_0XA/T1NE7nh8c5I/AAAAAAAABfw/CZ-AmAOZUPM/s1600/%E5%9C%96%E7%89%875.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://4.bp.blogspot.com/-dvCe8IZ_0XA/T1NE7nh8c5I/AAAAAAAABfw/CZ-AmAOZUPM/s1600/%E5%9C%96%E7%89%875.png" /></a></div>


<br />


<h2>Tip #7：Web Part設計</h2>


<p>儘量不要使用圓角設計<br />
確定它們可以隨視窗放大縮小（這一句很短，但是可以想像工程非常大）<br /></p>

<br />


<h2>Tip #8：置中、延展</h2>


<p>剛把master page做個雛型出來後雖然小有成就感，但是離<b>好看</b>可能還有一大段距離。其中最麻煩的就是每個頁面、每個user的螢幕大小都不一樣。<br />
這是OOTB的置中方式：<br /></p>

<div class="separator" style="clear: both; text-align: center;">
<a href="http://3.bp.blogspot.com/-BK-tnGypq3k/T1NE9fSmZFI/AAAAAAAABf0/YmWefjew2os/s1600/%E5%9C%96%E7%89%876.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"><img border="0" src="http://3.bp.blogspot.com/-BK-tnGypq3k/T1NE9fSmZFI/AAAAAAAABf0/YmWefjew2os/s1600/%E5%9C%96%E7%89%876.png" /></a></div>


<div class="separator" style="clear: both; text-align: left;">
這是我在master page加上的script，目的是讓所有頁面、所有大小的螢幕上的footer都保持在最下面（僅供參考，裡面許多id是我的自己的DOM裡面定義的）<a href="http://1.bp.blogspot.com/-NzGQ14E8sEE/T1NE-AEICMI/AAAAAAAABf4/2hBubOsgKcs/s1600/%E5%9C%96%E7%89%877.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://1.bp.blogspot.com/-NzGQ14E8sEE/T1NE-AEICMI/AAAAAAAABf4/2hBubOsgKcs/s1600/%E5%9C%96%E7%89%877.png" /></a></div>


<div class="separator" style="clear: both; text-align: left;">
<br /></div>




<h2>Tip #9：設成預設master page</h2>


<div class="separator" style="clear: both; text-align: left;">
打勾的話， 此站台以下的所有子站master page都會被覆蓋為P.master。</div>


<div class="separator" style="clear: both; text-align: center;">
</div>


<div class="separator" style="clear: both; text-align: center;">
<a href="http://2.bp.blogspot.com/-bsxX9d-qSj8/T1NGZxii34I/AAAAAAAABgQ/p56N_3vYorI/s1600/%E5%9C%96%E7%89%879.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/-bsxX9d-qSj8/T1NGZxii34I/AAAAAAAABgQ/p56N_3vYorI/s1600/%E5%9C%96%E7%89%879.png" /></a></div>


<div class="separator" style="clear: both; text-align: left;">
注意到上圖的設定畫面並沒有套上我們設計的master page嗎？如果不想為了_layouts裡面一堆內建功能在另外設計一個master page的話，記得去站台設定將Master Page Setting for Application _Layouts&nbsp;Pages選項選No。</div>


<div class="separator" style="clear: both; text-align: center;">
<a href="http://2.bp.blogspot.com/-HM61hWjzBXY/T1NYGROirzI/AAAAAAAABgo/DIfvBYhthWo/s1600/2012-03-04+19-37-37.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"><img border="0" src="http://2.bp.blogspot.com/-HM61hWjzBXY/T1NYGROirzI/AAAAAAAABgo/DIfvBYhthWo/s1600/2012-03-04+19-37-37.png" /></a></div>


<div class="separator" style="clear: both; text-align: left;">
<br /></div>




<h2>Tip #10：部署</h2>


<div class="separator" style="clear: both; text-align: left;">
因為我們的網站是一個大規模的對外站台，所有webpart程式碼都必須進SVN。上production時，deployment manager將根據deployment plan從SVN包裝wsp檔，透過指令上production。而我們的東西當然也不例外（想像一下，如果在上production時候，必須identify所有有改動的程式碼，然後用SharePoint Designer開啟UAT的站台，再將對應程式碼copy-paste到production，版本控管則由內建的document library機制紀錄之，這是何等的腦殘）。</div>


<div class="separator" style="clear: both; text-align: left;">
SharePoint Designer內部的所有東西也可以透過在Visual Studio的SharePoint Project形式包成wsp檔，在deploy時候會自動寫入對應資料夾。（要注意的是_layout裡面的資料無法使用此種方式部署，必須另尋它法）</div>


<div class="separator" style="clear: both; text-align: left;">
<br /></div>


<div class="separator" style="clear: both; text-align: left;">
<br /></div>


<div class="separator" style="clear: both; text-align: left;">
<br /></div>


<div class="separator" style="clear: both; text-align: left;">
小結：雖然這個task距離我已經快要一年之遠，對於很多細節的印象跟許多數不清的怨言都已經開始模糊了，不過這整個過程對我來說算是相當寶貴且難忘的：我頭一次有了與美工cowork的機會，另外也讓我體會到enterprise端的龐大商機還有微軟對於這個市場所投注的心力。（附帶一提，我們部門有聘請微軟的consultant每周一天固定on-site support了大約半年之久，其一天的費用大約NT$30,000） =q=&nbsp;</div>


<div class="separator" style="clear: both; text-align: left;">
<br /></div>


<div class="separator" style="clear: both; text-align: left;">
<br /></div>


<div class="separator" style="clear: both; text-align: left;">
參考資料：<a href="http://www.slideshare.net/cbpeters/making-sharepoint-look-good" target="_blank">Making SharePoint Look Good - Cory Peters</a></div>


<br />

]]></content>
  </entry>
  
</feed>
